!function(t){t.widget("thomaskahn.smoothDivScroll",{options:{scrollingHotSpotLeftClass:"scrollingHotSpotLeft",scrollingHotSpotRightClass:"scrollingHotSpotRight",scrollingHotSpotLeftVisibleClass:"scrollingHotSpotLeftVisible",scrollingHotSpotRightVisibleClass:"scrollingHotSpotRightVisible",scrollableAreaClass:"scrollableArea",scrollWrapperClass:"scrollWrapper",hiddenOnStart:!1,getContentOnLoad:{},countOnlyClass:"",startAtElementId:"",hotSpotScrolling:!0,hotSpotScrollingStep:15,hotSpotScrollingInterval:10,hotSpotMouseDownSpeedBooster:3,visibleHotSpotBackgrounds:"hover",hotSpotsVisibleTime:5e3,easingAfterHotSpotScrolling:!0,easingAfterHotSpotScrollingDistance:10,easingAfterHotSpotScrollingDuration:300,easingAfterHotSpotScrollingFunction:"easeOutQuart",mousewheelScrolling:"",mousewheelScrollingStep:70,easingAfterMouseWheelScrolling:!0,easingAfterMouseWheelScrollingDuration:300,easingAfterMouseWheelScrollingFunction:"easeOutQuart",manualContinuousScrolling:!1,autoScrollingMode:"",autoScrollingDirection:"endlessLoopRight",autoScrollingStep:1,autoScrollingInterval:10,touchScrolling:!1,scrollToAnimationDuration:1e3,scrollToEasingFunction:"easeOutQuart"},_create:function(){var l=this,a=this.options,e=this.element;e.data("scrollWrapper",e.find("."+a.scrollWrapperClass)),e.data("scrollingHotSpotRight",e.find("."+a.scrollingHotSpotRightClass)),e.data("scrollingHotSpotLeft",e.find("."+a.scrollingHotSpotLeftClass)),e.data("scrollableArea",e.find("."+a.scrollableAreaClass)),e.data("scrollingHotSpotRight").length>0&&e.data("scrollingHotSpotRight").detach(),e.data("scrollingHotSpotLeft").length>0&&e.data("scrollingHotSpotLeft").detach(),0===e.data("scrollableArea").length&&0===e.data("scrollWrapper").length?(e.wrapInner("<div class='"+a.scrollableAreaClass+"'>").wrapInner("<div class='"+a.scrollWrapperClass+"'>"),e.data("scrollWrapper",e.find("."+a.scrollWrapperClass)),e.data("scrollableArea",e.find("."+a.scrollableAreaClass))):0===e.data("scrollWrapper").length?(e.wrapInner("<div class='"+a.scrollWrapperClass+"'>"),e.data("scrollWrapper",e.find("."+a.scrollWrapperClass))):0===e.data("scrollableArea").length&&(e.data("scrollWrapper").wrapInner("<div class='"+a.scrollableAreaClass+"'>"),e.data("scrollableArea",e.find("."+a.scrollableAreaClass))),0===e.data("scrollingHotSpotRight").length?(e.prepend("<div class='"+a.scrollingHotSpotRightClass+"'></div>"),e.data("scrollingHotSpotRight",e.find("."+a.scrollingHotSpotRightClass))):e.prepend(e.data("scrollingHotSpotRight")),0===e.data("scrollingHotSpotLeft").length?(e.prepend("<div class='"+a.scrollingHotSpotLeftClass+"'></div>"),e.data("scrollingHotSpotLeft",e.find("."+a.scrollingHotSpotLeftClass))):e.prepend(e.data("scrollingHotSpotLeft")),e.data("speedBooster",1),e.data("scrollXPos",0),e.data("hotSpotWidth",e.data("scrollingHotSpotLeft").innerWidth()),e.data("scrollableAreaWidth",0),e.data("startingPosition",0),e.data("rightScrollingInterval",null),e.data("leftScrollingInterval",null),e.data("autoScrollingInterval",null),e.data("hideHotSpotBackgroundsInterval",null),e.data("previousScrollLeft",0),e.data("pingPongDirection","right"),e.data("getNextElementWidth",!0),e.data("swapAt",null),e.data("startAtElementHasNotPassed",!0),e.data("swappedElement",null),e.data("originalElements",e.data("scrollableArea").children(a.countOnlyClass)),e.data("visible",!0),e.data("enabled",!0),e.data("scrollableAreaHeight",e.data("scrollableArea").height()),e.data("scrollerOffset",e.offset()),a.touchScrolling&&e.data("enabled")&&e.data("scrollWrapper").kinetic({y:!1,moved:function(t){a.manualContinuousScrolling&&(e.data("scrollWrapper").scrollLeft()<=0?l._checkContinuousSwapLeft():l._checkContinuousSwapRight()),l._trigger("touchMoved")},stopped:function(t){e.data("scrollWrapper").stop(!0,!1),l.stopAutoScrolling(),l._trigger("touchStopped")}}),e.data("scrollingHotSpotRight").bind("mousemove",function(l){if(a.hotSpotScrolling){var o=l.pageX-t(this).offset().left;e.data("scrollXPos",Math.round(o/e.data("hotSpotWidth")*a.hotSpotScrollingStep)),(e.data("scrollXPos")===1/0||e.data("scrollXPos")<1)&&e.data("scrollXPos",1)}}),e.data("scrollingHotSpotRight").bind("mouseover",function(){a.hotSpotScrolling&&(e.data("scrollWrapper").stop(!0,!1),l.stopAutoScrolling(),e.data("rightScrollingInterval",setInterval(function(){e.data("scrollXPos")>0&&e.data("enabled")&&(e.data("scrollWrapper").scrollLeft(e.data("scrollWrapper").scrollLeft()+e.data("scrollXPos")*e.data("speedBooster")),a.manualContinuousScrolling&&l._checkContinuousSwapRight(),l._showHideHotSpots())},a.hotSpotScrollingInterval)),l._trigger("mouseOverRightHotSpot"))}),e.data("scrollingHotSpotRight").bind("mouseout",function(){a.hotSpotScrolling&&(clearInterval(e.data("rightScrollingInterval")),e.data("scrollXPos",0),a.easingAfterHotSpotScrolling&&e.data("enabled")&&e.data("scrollWrapper").animate({scrollLeft:e.data("scrollWrapper").scrollLeft()+a.easingAfterHotSpotScrollingDistance},{duration:a.easingAfterHotSpotScrollingDuration,easing:a.easingAfterHotSpotScrollingFunction}))}),e.data("scrollingHotSpotRight").bind("mousedown",function(){e.data("speedBooster",a.hotSpotMouseDownSpeedBooster)}),t("body").bind("mouseup",function(){e.data("speedBooster",1)}),e.data("scrollingHotSpotLeft").bind("mousemove",function(l){if(a.hotSpotScrolling){var o=e.data("hotSpotWidth")-(l.pageX-t(this).offset().left);e.data("scrollXPos",Math.round(o/e.data("hotSpotWidth")*a.hotSpotScrollingStep)),(e.data("scrollXPos")===1/0||e.data("scrollXPos")<1)&&e.data("scrollXPos",1)}}),e.data("scrollingHotSpotLeft").bind("mouseover",function(){a.hotSpotScrolling&&(e.data("scrollWrapper").stop(!0,!1),l.stopAutoScrolling(),e.data("leftScrollingInterval",setInterval(function(){e.data("scrollXPos")>0&&e.data("enabled")&&(e.data("scrollWrapper").scrollLeft(e.data("scrollWrapper").scrollLeft()-e.data("scrollXPos")*e.data("speedBooster")),a.manualContinuousScrolling&&l._checkContinuousSwapLeft(),l._showHideHotSpots())},a.hotSpotScrollingInterval)),l._trigger("mouseOverLeftHotSpot"))}),e.data("scrollingHotSpotLeft").bind("mouseout",function(){a.hotSpotScrolling&&(clearInterval(e.data("leftScrollingInterval")),e.data("scrollXPos",0),a.easingAfterHotSpotScrolling&&e.data("enabled")&&e.data("scrollWrapper").animate({scrollLeft:e.data("scrollWrapper").scrollLeft()-a.easingAfterHotSpotScrollingDistance},{duration:a.easingAfterHotSpotScrollingDuration,easing:a.easingAfterHotSpotScrollingFunction}))}),e.data("scrollingHotSpotLeft").bind("mousedown",function(){e.data("speedBooster",a.hotSpotMouseDownSpeedBooster)}),e.data("scrollableArea").mousewheel(function(t,o,r,s){if(e.data("enabled")&&a.mousewheelScrolling.length>0){var i;"vertical"===a.mousewheelScrolling&&0!==s?(l.stopAutoScrolling(),t.preventDefault(),i=Math.round(a.mousewheelScrollingStep*s*-1),l.move(i)):"horizontal"===a.mousewheelScrolling&&0!==r?(l.stopAutoScrolling(),t.preventDefault(),i=Math.round(a.mousewheelScrollingStep*r*-1),l.move(i)):"allDirections"===a.mousewheelScrolling&&(l.stopAutoScrolling(),t.preventDefault(),i=Math.round(a.mousewheelScrollingStep*o*-1),l.move(i))}}),a.mousewheelScrolling&&e.data("scrollingHotSpotLeft").add(e.data("scrollingHotSpotRight")).mousewheel(function(t){t.preventDefault()}),t(window).bind("resize",function(){l._showHideHotSpots(),l._trigger("windowResized")}),jQuery.isEmptyObject(a.getContentOnLoad)||l[a.getContentOnLoad.method](a.getContentOnLoad.content,a.getContentOnLoad.manipulationMethod,a.getContentOnLoad.addWhere,a.getContentOnLoad.filterTag),a.hiddenOnStart&&l.hide(),t(window).load(function(){if(a.hiddenOnStart||l.recalculateScrollableArea(),a.autoScrollingMode.length>0&&!a.hiddenOnStart&&l.startAutoScrolling(),"always"!==a.autoScrollingMode)switch(a.visibleHotSpotBackgrounds){case"always":l.showHotSpotBackgrounds();break;case"onStart":l.showHotSpotBackgrounds(),e.data("hideHotSpotBackgroundsInterval",setTimeout(function(){l.hideHotSpotBackgrounds(250)},a.hotSpotsVisibleTime));break;case"hover":e.mouseenter(function(t){a.hotSpotScrolling&&(t.stopPropagation(),l.showHotSpotBackgrounds(250))}).mouseleave(function(t){a.hotSpotScrolling&&(t.stopPropagation(),l.hideHotSpotBackgrounds(250))})}l._showHideHotSpots(),l._trigger("setupComplete")})},_init:function(){var t=this;this.element;t.recalculateScrollableArea(),t._showHideHotSpots(),t._trigger("initializationComplete")},_setOption:function(t,l){var a=this,e=this.options,o=this.element;e[t]=l,"hotSpotScrolling"===t?l===!0?a._showHideHotSpots():(o.data("scrollingHotSpotLeft").hide(),o.data("scrollingHotSpotRight").hide()):"autoScrollingStep"===t||"easingAfterHotSpotScrollingDistance"===t||"easingAfterHotSpotScrollingDuration"===t||"easingAfterMouseWheelScrollingDuration"===t?e[t]=parseInt(l,10):"autoScrollingInterval"===t&&(e[t]=parseInt(l,10),a.startAutoScrolling())},showHotSpotBackgrounds:function(t){var l=this,a=this.element,e=this.options;void 0!==t?(a.data("scrollingHotSpotLeft").addClass(e.scrollingHotSpotLeftVisibleClass),a.data("scrollingHotSpotRight").addClass(e.scrollingHotSpotRightVisibleClass),a.data("scrollingHotSpotLeft").add(a.data("scrollingHotSpotRight")).fadeTo(t,.35)):(a.data("scrollingHotSpotLeft").addClass(e.scrollingHotSpotLeftVisibleClass),a.data("scrollingHotSpotLeft").removeAttr("style"),a.data("scrollingHotSpotRight").addClass(e.scrollingHotSpotRightVisibleClass),a.data("scrollingHotSpotRight").removeAttr("style")),l._showHideHotSpots()},hideHotSpotBackgrounds:function(t){var l=this.element,a=this.options;void 0!==t?(l.data("scrollingHotSpotLeft").fadeTo(t,0,function(){l.data("scrollingHotSpotLeft").removeClass(a.scrollingHotSpotLeftVisibleClass)}),l.data("scrollingHotSpotRight").fadeTo(t,0,function(){l.data("scrollingHotSpotRight").removeClass(a.scrollingHotSpotRightVisibleClass)})):(l.data("scrollingHotSpotLeft").removeClass(a.scrollingHotSpotLeftVisibleClass).removeAttr("style"),l.data("scrollingHotSpotRight").removeClass(a.scrollingHotSpotRightVisibleClass).removeAttr("style"))},_showHideHotSpots:function(){var t=this,l=this.element,a=this.options;a.hotSpotScrolling?a.hotSpotScrolling&&"always"!==a.autoScrollingMode&&null!==l.data("autoScrollingInterval")?(l.data("scrollingHotSpotLeft").show(),l.data("scrollingHotSpotRight").show()):"always"!==a.autoScrollingMode&&a.hotSpotScrolling?l.data("scrollableAreaWidth")<=l.data("scrollWrapper").innerWidth()?(l.data("scrollingHotSpotLeft").hide(),l.data("scrollingHotSpotRight").hide()):0===l.data("scrollWrapper").scrollLeft()?(l.data("scrollingHotSpotLeft").hide(),l.data("scrollingHotSpotRight").show(),t._trigger("scrollerLeftLimitReached"),clearInterval(l.data("leftScrollingInterval")),l.data("leftScrollingInterval",null)):l.data("scrollableAreaWidth")<=l.data("scrollWrapper").innerWidth()+l.data("scrollWrapper").scrollLeft()?(l.data("scrollingHotSpotLeft").show(),l.data("scrollingHotSpotRight").hide(),t._trigger("scrollerRightLimitReached"),clearInterval(l.data("rightScrollingInterval")),l.data("rightScrollingInterval",null)):(l.data("scrollingHotSpotLeft").show(),l.data("scrollingHotSpotRight").show()):(l.data("scrollingHotSpotLeft").hide(),l.data("scrollingHotSpotRight").hide()):(l.data("scrollingHotSpotLeft").hide(),l.data("scrollingHotSpotRight").hide())},_setElementScrollPosition:function(l,a){var e=this.element,o=this.options,r=0;switch(l){case"first":return e.data("scrollXPos",0),!0;case"start":return""!==o.startAtElementId&&e.data("scrollableArea").has("#"+o.startAtElementId)?(r=t("#"+o.startAtElementId).position().left,e.data("scrollXPos",r),!0):!1;case"last":return e.data("scrollXPos",e.data("scrollableAreaWidth")-e.data("scrollWrapper").innerWidth()),!0;case"number":return isNaN(a)?!1:(r=e.data("scrollableArea").children(o.countOnlyClass).eq(a-1).position().left,e.data("scrollXPos",r),!0);case"id":return a.length>0&&e.data("scrollableArea").has("#"+a)?(r=t("#"+a).position().left,e.data("scrollXPos",r),!0):!1;default:return!1}},jumpToElement:function(t,l){var a=this,e=this.element;if(e.data("enabled")&&a._setElementScrollPosition(t,l))switch(e.data("scrollWrapper").scrollLeft(e.data("scrollXPos")),a._showHideHotSpots(),t){case"first":a._trigger("jumpedToFirstElement");break;case"start":a._trigger("jumpedToStartElement");break;case"last":a._trigger("jumpedToLastElement");break;case"number":a._trigger("jumpedToElementNumber",null,{elementNumber:l});break;case"id":a._trigger("jumpedToElementId",null,{elementId:l})}},scrollToElement:function(t,l){var a=this,e=this.element,o=this.options,r=!1;e.data("enabled")&&a._setElementScrollPosition(t,l)&&(null!==e.data("autoScrollingInterval")&&(a.stopAutoScrolling(),r=!0),e.data("scrollWrapper").stop(!0,!1),e.data("scrollWrapper").animate({scrollLeft:e.data("scrollXPos")},{duration:o.scrollToAnimationDuration,easing:o.scrollToEasingFunction,complete:function(){switch(r&&a.startAutoScrolling(),a._showHideHotSpots(),t){case"first":a._trigger("scrolledToFirstElement");break;case"start":a._trigger("scrolledToStartElement");break;case"last":a._trigger("scrolledToLastElement");break;case"number":a._trigger("scrolledToElementNumber",null,{elementNumber:l});break;case"id":a._trigger("scrolledToElementId",null,{elementId:l})}}}))},move:function(t){var l=this,a=this.element,e=this.options;if(a.data("scrollWrapper").stop(!0,!0),0>t&&a.data("scrollWrapper").scrollLeft()>0||t>0&&a.data("scrollableAreaWidth")>a.data("scrollWrapper").innerWidth()+a.data("scrollWrapper").scrollLeft()||e.manualContinuousScrolling){var o=a.data("scrollableArea").width()-a.data("scrollWrapper").width(),r=a.data("scrollWrapper").scrollLeft()+t;if(0>r)for(var s=function(){a.data("swappedElement",a.data("scrollableArea").children(":last").detach()),a.data("scrollableArea").prepend(a.data("swappedElement")),a.data("scrollWrapper").scrollLeft(a.data("scrollWrapper").scrollLeft()+a.data("swappedElement").outerWidth(!0))};0>r;)s(),r=a.data("scrollableArea").children(":first").outerWidth(!0)+r;else if(r-o>0)for(var i=function(){a.data("swappedElement",a.data("scrollableArea").children(":first").detach()),a.data("scrollableArea").append(a.data("swappedElement"));var t=a.data("scrollWrapper").scrollLeft();a.data("scrollWrapper").scrollLeft(t-a.data("swappedElement").outerWidth(!0))};r-o>0;)i(),r-=a.data("scrollableArea").children(":last").outerWidth(!0);e.easingAfterMouseWheelScrolling?a.data("scrollWrapper").animate({scrollLeft:a.data("scrollWrapper").scrollLeft()+t},{duration:e.easingAfterMouseWheelScrollingDuration,easing:e.easingAfterMouseWheelFunction,complete:function(){l._showHideHotSpots(),e.manualContinuousScrolling&&(t>0?l._checkContinuousSwapRight():l._checkContinuousSwapLeft())}}):(a.data("scrollWrapper").scrollLeft(a.data("scrollWrapper").scrollLeft()+t),l._showHideHotSpots(),e.manualContinuousScrolling&&(t>0?l._checkContinuousSwapRight():l._checkContinuousSwapLeft()))}},getFlickrContent:function(l,a){var e=this,o=this.element;t.getJSON(l,function(l){function r(l,i){var h=l.media.m,u=h.replace("_m",n[i].letter),S=t("<img />").attr("src",u);S.load(function(){if(this.height<o.data("scrollableAreaHeight")&&i+1<n.length?r(l,i+1):s(this),g===p){switch(a){case"addFirst":o.data("scrollableArea").children(":first").before(c);break;case"addLast":o.data("scrollableArea").children(":last").after(c);break;default:o.data("scrollableArea").html(c)}e.recalculateScrollableArea(),e._showHideHotSpots(),e._trigger("addedFlickrContent",null,{addedElementIds:d})}})}function s(l){var a=o.data("scrollableAreaHeight")/l.height,e=Math.round(l.width*a),r=t(l).attr("src").split("/"),s=r.length-1;r=r[s].split("."),t(l).attr("id",r[0]),t(l).css({height:o.data("scrollableAreaHeight"),width:e}),d.push(r[0]),c.push(l),g++}var i,n=[{size:"small square",pixels:75,letter:"_s"},{size:"thumbnail",pixels:100,letter:"_t"},{size:"small",pixels:240,letter:"_m"},{size:"medium",pixels:500,letter:""},{size:"medium 640",pixels:640,letter:"_z"},{size:"large",pixels:1024,letter:"_b"}],c=[],d=[],p=l.items.length,g=0;i=o.data("scrollableAreaHeight")<=75?0:o.data("scrollableAreaHeight")<=100?1:o.data("scrollableAreaHeight")<=240?2:o.data("scrollableAreaHeight")<=500?3:o.data("scrollableAreaHeight")<=640?4:5,t.each(l.items,function(t,l){r(l,i)})})},getAjaxContent:function(l,a,e){var o=this,r=this.element;t.ajaxSetup({cache:!1}),t.get(l,function(s){var i;switch(i=void 0!==e?e.length>0?t("<div>").html(s).find(e):l:s,a){case"addFirst":r.data("scrollableArea").children(":first").before(i);break;case"addLast":r.data("scrollableArea").children(":last").after(i);break;default:r.data("scrollableArea").html(i)}o.recalculateScrollableArea(),o._showHideHotSpots(),o._trigger("addedAjaxContent")})},getHtmlContent:function(l,a,e){var o,r=this,s=this.element;switch(o=void 0!==e&&e.length>0?t("<div>").html(l).find(e):l,a){case"addFirst":s.data("scrollableArea").children(":first").before(o);break;case"addLast":s.data("scrollableArea").children(":last").after(o);break;default:s.data("scrollableArea").html(o)}r.recalculateScrollableArea(),r._showHideHotSpots(),r._trigger("addedHtmlContent")},recalculateScrollableArea:function(){var l=0,a=!1,e=this.options,o=this.element;o.data("scrollableArea").children(e.countOnlyClass).each(function(){e.startAtElementId.length>0&&t(this).attr("id")===e.startAtElementId&&(o.data("startingPosition",l),a=!0),l+=t(this).outerWidth(!0)}),a||o.data("startAtElementId",""),o.data("scrollableAreaWidth",l),o.data("scrollableArea").width(o.data("scrollableAreaWidth")),o.data("scrollWrapper").scrollLeft(o.data("startingPosition")),o.data("scrollXPos",o.data("startingPosition"))},getScrollerOffset:function(){var t=this.element;return t.data("scrollWrapper").scrollLeft()},stopAutoScrolling:function(){var t=this,l=this.element;null!==l.data("autoScrollingInterval")&&(clearInterval(l.data("autoScrollingInterval")),l.data("autoScrollingInterval",null),t._showHideHotSpots(),t._trigger("autoScrollingStopped"))},startAutoScrolling:function(){var t=this,l=this.element,a=this.options;l.data("enabled")&&(t._showHideHotSpots(),clearInterval(l.data("autoScrollingInterval")),l.data("autoScrollingInterval",null),t._trigger("autoScrollingStarted"),l.data("autoScrollingInterval",setInterval(function(){if(!l.data("visible")||l.data("scrollableAreaWidth")<=l.data("scrollWrapper").innerWidth())clearInterval(l.data("autoScrollingInterval")),l.data("autoScrollingInterval",null);else switch(l.data("previousScrollLeft",l.data("scrollWrapper").scrollLeft()),a.autoScrollingDirection){case"right":l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()+a.autoScrollingStep),l.data("previousScrollLeft")===l.data("scrollWrapper").scrollLeft()&&(t._trigger("autoScrollingRightLimitReached"),t.stopAutoScrolling());break;case"left":l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()-a.autoScrollingStep),l.data("previousScrollLeft")===l.data("scrollWrapper").scrollLeft()&&(t._trigger("autoScrollingLeftLimitReached"),t.stopAutoScrolling());break;case"backAndForth":"right"===l.data("pingPongDirection")?l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()+a.autoScrollingStep):l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()-a.autoScrollingStep),l.data("previousScrollLeft")===l.data("scrollWrapper").scrollLeft()&&("right"===l.data("pingPongDirection")?(l.data("pingPongDirection","left"),t._trigger("autoScrollingRightLimitReached")):(l.data("pingPongDirection","right"),t._trigger("autoScrollingLeftLimitReached")));break;case"endlessLoopRight":l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()+a.autoScrollingStep),t._checkContinuousSwapRight();break;case"endlessLoopLeft":l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()-a.autoScrollingStep),t._checkContinuousSwapLeft()}},a.autoScrollingInterval)))},_checkContinuousSwapRight:function(){var l=this.element,a=this.options;if(l.data("getNextElementWidth")&&(a.startAtElementId.length>0&&l.data("startAtElementHasNotPassed")?(l.data("swapAt",t("#"+a.startAtElementId).outerWidth(!0)),l.data("startAtElementHasNotPassed",!1)):l.data("swapAt",l.data("scrollableArea").children(":first").outerWidth(!0)),l.data("getNextElementWidth",!1)),l.data("swapAt")<=l.data("scrollWrapper").scrollLeft()){l.data("swappedElement",l.data("scrollableArea").children(":first").detach()),l.data("scrollableArea").append(l.data("swappedElement"));var e=l.data("scrollWrapper").scrollLeft();l.data("scrollWrapper").scrollLeft(e-l.data("swappedElement").outerWidth(!0)),l.data("getNextElementWidth",!0)}},_checkContinuousSwapLeft:function(){var l=this.element,a=this.options;l.data("getNextElementWidth")&&(a.startAtElementId.length>0&&l.data("startAtElementHasNotPassed")?(l.data("swapAt",t("#"+a.startAtElementId).outerWidth(!0)),l.data("startAtElementHasNotPassed",!1)):l.data("swapAt",l.data("scrollableArea").children(":first").outerWidth(!0)),l.data("getNextElementWidth",!1)),0===l.data("scrollWrapper").scrollLeft()&&(l.data("swappedElement",l.data("scrollableArea").children(":last").detach()),l.data("scrollableArea").prepend(l.data("swappedElement")),l.data("scrollWrapper").scrollLeft(l.data("scrollWrapper").scrollLeft()+l.data("swappedElement").outerWidth(!0)),l.data("getNextElementWidth",!0))},restoreOriginalElements:function(){var t=this,l=this.element;l.data("scrollableArea").html(l.data("originalElements")),t.recalculateScrollableArea(),t.jumpToElement("first")},show:function(){var t=this.element;t.data("visible",!0),t.show()},hide:function(){var t=this.element;t.data("visible",!1),t.hide()},enable:function(){var t=this.element;this.options.touchScrolling&&t.data("scrollWrapper").kinetic("attach"),t.data("enabled",!0)},disable:function(){var t=this,l=this.element;t.stopAutoScrolling(),clearInterval(l.data("rightScrollingInterval")),clearInterval(l.data("leftScrollingInterval")),clearInterval(l.data("hideHotSpotBackgroundsInterval")),this.options.touchScrolling&&l.data("scrollWrapper").kinetic("detach"),l.data("enabled",!1)},destroy:function(){var l=this,a=this.element;l.stopAutoScrolling(),clearInterval(a.data("rightScrollingInterval")),clearInterval(a.data("leftScrollingInterval")),clearInterval(a.data("hideHotSpotBackgroundsInterval")),a.data("scrollingHotSpotRight").unbind("mouseover"),a.data("scrollingHotSpotRight").unbind("mouseout"),a.data("scrollingHotSpotRight").unbind("mousedown"),a.data("scrollingHotSpotLeft").unbind("mouseover"),a.data("scrollingHotSpotLeft").unbind("mouseout"),a.data("scrollingHotSpotLeft").unbind("mousedown"),a.unbind("mousenter"),a.unbind("mouseleave"),a.data("scrollingHotSpotRight").remove(),a.data("scrollingHotSpotLeft").remove(),a.data("scrollableArea").remove(),a.data("scrollWrapper").remove(),a.html(a.data("originalElements")),t.Widget.prototype.destroy.apply(this,arguments)}})}(jQuery);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpxdWVyeS5zbW9vdGhEaXZTY3JvbGwtMS4zLmpzIl0sIm5hbWVzIjpbIiQiLCJ3aWRnZXQiLCJvcHRpb25zIiwic2Nyb2xsaW5nSG90U3BvdExlZnRDbGFzcyIsInNjcm9sbGluZ0hvdFNwb3RSaWdodENsYXNzIiwic2Nyb2xsaW5nSG90U3BvdExlZnRWaXNpYmxlQ2xhc3MiLCJzY3JvbGxpbmdIb3RTcG90UmlnaHRWaXNpYmxlQ2xhc3MiLCJzY3JvbGxhYmxlQXJlYUNsYXNzIiwic2Nyb2xsV3JhcHBlckNsYXNzIiwiaGlkZGVuT25TdGFydCIsImdldENvbnRlbnRPbkxvYWQiLCJjb3VudE9ubHlDbGFzcyIsInN0YXJ0QXRFbGVtZW50SWQiLCJob3RTcG90U2Nyb2xsaW5nIiwiaG90U3BvdFNjcm9sbGluZ1N0ZXAiLCJob3RTcG90U2Nyb2xsaW5nSW50ZXJ2YWwiLCJob3RTcG90TW91c2VEb3duU3BlZWRCb29zdGVyIiwidmlzaWJsZUhvdFNwb3RCYWNrZ3JvdW5kcyIsImhvdFNwb3RzVmlzaWJsZVRpbWUiLCJlYXNpbmdBZnRlckhvdFNwb3RTY3JvbGxpbmciLCJlYXNpbmdBZnRlckhvdFNwb3RTY3JvbGxpbmdEaXN0YW5jZSIsImVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZ0R1cmF0aW9uIiwiZWFzaW5nQWZ0ZXJIb3RTcG90U2Nyb2xsaW5nRnVuY3Rpb24iLCJtb3VzZXdoZWVsU2Nyb2xsaW5nIiwibW91c2V3aGVlbFNjcm9sbGluZ1N0ZXAiLCJlYXNpbmdBZnRlck1vdXNlV2hlZWxTY3JvbGxpbmciLCJlYXNpbmdBZnRlck1vdXNlV2hlZWxTY3JvbGxpbmdEdXJhdGlvbiIsImVhc2luZ0FmdGVyTW91c2VXaGVlbFNjcm9sbGluZ0Z1bmN0aW9uIiwibWFudWFsQ29udGludW91c1Njcm9sbGluZyIsImF1dG9TY3JvbGxpbmdNb2RlIiwiYXV0b1Njcm9sbGluZ0RpcmVjdGlvbiIsImF1dG9TY3JvbGxpbmdTdGVwIiwiYXV0b1Njcm9sbGluZ0ludGVydmFsIiwidG91Y2hTY3JvbGxpbmciLCJzY3JvbGxUb0FuaW1hdGlvbkR1cmF0aW9uIiwic2Nyb2xsVG9FYXNpbmdGdW5jdGlvbiIsIl9jcmVhdGUiLCJzZWxmIiwidGhpcyIsIm8iLCJlbCIsImVsZW1lbnQiLCJkYXRhIiwiZmluZCIsImxlbmd0aCIsImRldGFjaCIsIndyYXBJbm5lciIsInByZXBlbmQiLCJpbm5lcldpZHRoIiwiY2hpbGRyZW4iLCJoZWlnaHQiLCJvZmZzZXQiLCJraW5ldGljIiwieSIsIm1vdmVkIiwic2V0dGluZ3MiLCJzY3JvbGxMZWZ0IiwiX2NoZWNrQ29udGludW91c1N3YXBMZWZ0IiwiX2NoZWNrQ29udGludW91c1N3YXBSaWdodCIsIl90cmlnZ2VyIiwic3RvcHBlZCIsInN0b3AiLCJzdG9wQXV0b1Njcm9sbGluZyIsImJpbmQiLCJlIiwieCIsInBhZ2VYIiwibGVmdCIsIk1hdGgiLCJyb3VuZCIsIkluZmluaXR5Iiwic2V0SW50ZXJ2YWwiLCJfc2hvd0hpZGVIb3RTcG90cyIsImNsZWFySW50ZXJ2YWwiLCJhbmltYXRlIiwiZHVyYXRpb24iLCJlYXNpbmciLCJtb3VzZXdoZWVsIiwiZXZlbnQiLCJkZWx0YSIsImRlbHRhWCIsImRlbHRhWSIsInBpeGVscyIsInByZXZlbnREZWZhdWx0IiwibW92ZSIsImFkZCIsIndpbmRvdyIsImpRdWVyeSIsImlzRW1wdHlPYmplY3QiLCJtZXRob2QiLCJjb250ZW50IiwibWFuaXB1bGF0aW9uTWV0aG9kIiwiYWRkV2hlcmUiLCJmaWx0ZXJUYWciLCJoaWRlIiwibG9hZCIsInJlY2FsY3VsYXRlU2Nyb2xsYWJsZUFyZWEiLCJzdGFydEF1dG9TY3JvbGxpbmciLCJzaG93SG90U3BvdEJhY2tncm91bmRzIiwic2V0VGltZW91dCIsImhpZGVIb3RTcG90QmFja2dyb3VuZHMiLCJtb3VzZWVudGVyIiwic3RvcFByb3BhZ2F0aW9uIiwibW91c2VsZWF2ZSIsIl9pbml0IiwiX3NldE9wdGlvbiIsImtleSIsInZhbHVlIiwicGFyc2VJbnQiLCJmYWRlU3BlZWQiLCJ1bmRlZmluZWQiLCJhZGRDbGFzcyIsImZhZGVUbyIsInJlbW92ZUF0dHIiLCJyZW1vdmVDbGFzcyIsInNob3ciLCJfc2V0RWxlbWVudFNjcm9sbFBvc2l0aW9uIiwidGVtcFNjcm9sbFBvc2l0aW9uIiwiaGFzIiwicG9zaXRpb24iLCJpc05hTiIsImVxIiwianVtcFRvRWxlbWVudCIsImp1bXBUbyIsImVsZW1lbnROdW1iZXIiLCJlbGVtZW50SWQiLCJzY3JvbGxUb0VsZW1lbnQiLCJzY3JvbGxUbyIsImF1dG9zY3JvbGxpbmdXYXNSdW5uaW5nIiwiY29tcGxldGUiLCJzY3JvbGxMZW5ndGgiLCJ3aWR0aCIsInNPZmZzZXQiLCJmb3JjZVN3YXBFbGVtZW50TGVmdCIsIm91dGVyV2lkdGgiLCJmb3JjZVN3YXBFbGVtZW50UmlnaHQiLCJhcHBlbmQiLCJ3cmFwcGVyTGVmdCIsImVhc2luZ0FmdGVyTW91c2VXaGVlbEZ1bmN0aW9uIiwiZ2V0RmxpY2tyQ29udGVudCIsImdldEpTT04iLCJsb2FkRmxpY2tySW1hZ2UiLCJpdGVtIiwic2l6ZUluZGV4IiwicGF0aCIsIm1lZGlhIiwibSIsImltZ1NyYyIsInJlcGxhY2UiLCJmbGlja3JJbWFnZVNpemVzIiwibGV0dGVyIiwidGVtcEltZyIsImF0dHIiLCJhZGRJbWFnZVRvTG9hZGVkSW1hZ2VzIiwibG9hZGVkRmxpY2tySW1hZ2VzQ291bnRlciIsIm51bWJlck9mRmxpY2tySXRlbXMiLCJiZWZvcmUiLCJsb2FkZWRGbGlja3JJbWFnZXMiLCJhZnRlciIsImh0bWwiLCJhZGRlZEVsZW1lbnRJZHMiLCJpbWFnZUlkU3RyaW5nQnVmZmVyIiwiaW1hZ2VPYmoiLCJ3aWR0aFNjYWxpbmdGYWN0b3IiLCJ0ZW1wV2lkdGgiLCJ0ZW1wSWRBcnIiLCJzcGxpdCIsImxhc3RFbGVtSW5kZXgiLCJjc3MiLCJwdXNoIiwic3RhcnRpbmdJbmRleCIsInNpemUiLCJpdGVtcyIsImVhY2giLCJpbmRleCIsImdldEFqYXhDb250ZW50IiwiYWpheFNldHVwIiwiY2FjaGUiLCJnZXQiLCJmaWx0ZXJlZENvbnRlbnQiLCJnZXRIdG1sQ29udGVudCIsInRlbXBTY3JvbGxhYmxlQXJlYVdpZHRoIiwiZm91bmRTdGFydEF0RWxlbWVudCIsImdldFNjcm9sbGVyT2Zmc2V0IiwicmVzdG9yZU9yaWdpbmFsRWxlbWVudHMiLCJlbmFibGUiLCJkaXNhYmxlIiwiZGVzdHJveSIsInVuYmluZCIsInJlbW92ZSIsIldpZGdldCIsInByb3RvdHlwZSIsImFwcGx5IiwiYXJndW1lbnRzIl0sIm1hcHBpbmdzIjoiQ0E0QkEsU0FBV0EsR0FFVkEsRUFBRUMsT0FBTyw4QkFFUkMsU0FFQ0MsMEJBQTJCLHVCQUMzQkMsMkJBQTRCLHdCQUM1QkMsaUNBQWtDLDhCQUNsQ0Msa0NBQW1DLCtCQUNuQ0Msb0JBQXFCLGlCQUNyQkMsbUJBQW9CLGdCQUdwQkMsZUFBZSxFQUNmQyxvQkFDQUMsZUFBZ0IsR0FDaEJDLGlCQUFrQixHQUdsQkMsa0JBQWtCLEVBQ2xCQyxxQkFBc0IsR0FDdEJDLHlCQUEwQixHQUMxQkMsNkJBQThCLEVBQzlCQywwQkFBMkIsUUFDM0JDLG9CQUFxQixJQUNyQkMsNkJBQTZCLEVBQzdCQyxvQ0FBcUMsR0FDckNDLG9DQUFxQyxJQUNyQ0Msb0NBQXFDLGVBR3JDQyxvQkFBcUIsR0FDckJDLHdCQUF5QixHQUN6QkMsZ0NBQWdDLEVBQ2hDQyx1Q0FBd0MsSUFDeENDLHVDQUF3QyxlQUd4Q0MsMkJBQTJCLEVBRzNCQyxrQkFBbUIsR0FDbkJDLHVCQUF3QixtQkFDeEJDLGtCQUFtQixFQUNuQkMsc0JBQXVCLEdBR3ZCQyxnQkFBZ0IsRUFHaEJDLDBCQUEyQixJQUMzQkMsdUJBQXdCLGdCQUV6QkMsUUFBUyxXQUNSLEdBQUlDLEdBQU9DLEtBQU1DLEVBQUlELEtBQUtwQyxRQUFTc0MsRUFBS0YsS0FBS0csT0FJN0NELEdBQUdFLEtBQUssZ0JBQWlCRixFQUFHRyxLQUFLLElBQU1KLEVBQUUvQixxQkFDekNnQyxFQUFHRSxLQUFLLHdCQUF5QkYsRUFBR0csS0FBSyxJQUFNSixF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akMsRUFBR0UsS0FBSywwQkFDdEIrQixjQUFjakMsRUFBR0UsS0FBSyxtQ0FHbEJKLEtBQUtwQyxRQUFRK0IsZ0JBQ2hCTyxFQUFHRSxLQUFLLGlCQUFpQlUsUUFBUSxVQUlsQ1osRUFBR0UsS0FBSyxXQUFXLElBRXBCaUosUUFBUyxXQUNSLEdBQUl0SixHQUFPQyxLQUFNRSxFQUFLRixLQUFLRyxPQUczQkosR0FBS3lCLG9CQUNMVyxjQUFjakMsRUFBR0UsS0FBSywyQkFDdEIrQixjQUFjakMsRUFBR0UsS0FBSywwQkFDdEIrQixjQUFjakMsRUFBR0UsS0FBSyxtQ0FHdEJGLEVBQUdFLEtBQUsseUJBQXlCa0osT0FBTyxhQUN4Q3BKLEVBQUdFLEtBQUsseUJBQXlCa0osT0FBTyxZQUN4Q3BKLEVBQUdFLEtBQUsseUJBQXlCa0osT0FBTyxhQUV4Q3BKLEVBQUdFLEtBQUssd0JBQXdCa0osT0FBTyxhQUN2Q3BKLEVBQUdFLEtBQUssd0JBQXdCa0osT0FBTyxZQUN2Q3BKLEVBQUdFLEtBQUssd0JBQXdCa0osT0FBTyxhQUV2Q3BKLEVBQUdvSixPQUFPLGFBQ1ZwSixFQUFHb0osT0FBTyxjQUdWcEosRUFBR0UsS0FBSyx5QkFBeUJtSixTQUNqQ3JKLEVBQUdFLEtBQUssd0JBQXdCbUosU0FDaENySixFQUFHRSxLQUFLLGtCQUFrQm1KLFNBQzFCckosRUFBR0UsS0FBSyxpQkFBaUJtSixTQUd6QnJKLEVBQUd1SCxLQUFLdkgsRUFBR0UsS0FBSyxxQkFHaEIxQyxFQUFFOEwsT0FBT0MsVUFBVUosUUFBUUssTUFBTTFKLEtBQU0ySixlQU12QzFHIiwiZmlsZSI6ImpxdWVyeS5zbW9vdGhEaXZTY3JvbGwtMS4zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIGpRdWVyeSBTbW9vdGhEaXZTY3JvbGwgMS4zXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzIFRob21hcyBLYWhuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgR1BMIGxpY2Vuc2UuXG4gKlxuICogaHR0cDovL3d3dy5zbW9vdGhkaXZzY3JvbGwuY29tL1xuICpcbiAqIERlcGVuZHM6XG4gKiBqcXVlcnktMS4xMC4yLm1pbi5qc1xuICAgUGxlYXNlIHVzZSBodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjEwLjIvanF1ZXJ5Lm1pbi5qc1xuICAgLi4ub3IgbGF0ZXJcblxuICoganF1ZXJ5LXVpLTEuMTAuMy5jdXN0b20ubWluXG4gICBNYWtlIHlvdXIgb3duIGN1c3RvbSBkb3dubG9hZCBhdCBodHRwOi8vanF1ZXJ5dWkuY29tL2Rvd25sb2FkLlxuICAgRmlyc3QgZGVzZWxlY3QgYWxsIGNvbXBvbmVudHMuIFRoZW4gY2hlY2sganVzdCBcIldpZGdldFwiIGFuZCBcIkVmZmVjdHMgQ29yZVwiLlxuICAgRG93bmxvYWQgdGhlIGZpbGUgYW5kIHB1dCBpdCBpbiB5b3VyIGphdmFzY3JpcHQgZm9sZGVyLlxuXG4gKiBqcXVlcnkubW91c2V3aGVlbC5taW4uanNcbiAgIFVzZWQgZm9yIG1vdXNld2hlZWwgZnVuY3Rpb25hbGl0eS5cbiAgIERvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbiBhdCBodHRwczovL2dpdGh1Yi5jb20vYnJhbmRvbmFhcm9uL2pxdWVyeS1tb3VzZXdoZWVsXG4gKlxuXG4gKiBqcXVlcnkua2luZXRpYy5taW4uanNcbiAgIFVzZWQgZm9yIHNjcm9sbGluZyBieSBkcmFnZ2luZywgbWFpbmx5IHVzZWQgb24gdG91Y2ggZGV2aWNlcy5cbiAgIERvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbiBhdCBodHRwczovL2dpdGh1Yi5jb20vZGF2ZXRheWxzL2pxdWVyeS5raW5ldGljXG4gKlxuICovXG4oZnVuY3Rpb24gKCQpIHtcblxuXHQkLndpZGdldChcInRob21hc2thaG4uc21vb3RoRGl2U2Nyb2xsXCIsIHtcblx0XHQvLyBEZWZhdWx0IG9wdGlvbnNcblx0XHRvcHRpb25zOiB7XG5cdFx0XHQvLyBDbGFzc2VzIGZvciBlbGVtZW50cyBhZGRlZCBieSBTbW9vdGggRGl2IFNjcm9sbFxuXHRcdFx0c2Nyb2xsaW5nSG90U3BvdExlZnRDbGFzczogXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiLCAvLyBTdHJpbmdcblx0XHRcdHNjcm9sbGluZ0hvdFNwb3RSaWdodENsYXNzOiBcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiLCAvLyBTdHJpbmdcblx0XHRcdHNjcm9sbGluZ0hvdFNwb3RMZWZ0VmlzaWJsZUNsYXNzOiBcInNjcm9sbGluZ0hvdFNwb3RMZWZ0VmlzaWJsZVwiLCAvLyBTdHJpbmdcblx0XHRcdHNjcm9sbGluZ0hvdFNwb3RSaWdodFZpc2libGVDbGFzczogXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRWaXNpYmxlXCIsIC8vIFN0cmluZ1xuXHRcdFx0c2Nyb2xsYWJsZUFyZWFDbGFzczogXCJzY3JvbGxhYmxlQXJlYVwiLCAvLyBTdHJpbmdcblx0XHRcdHNjcm9sbFdyYXBwZXJDbGFzczogXCJzY3JvbGxXcmFwcGVyXCIsIC8vIFN0cmluZ1xuXG5cdFx0XHQvLyBNaXNjIHNldHRpbmdzXG5cdFx0XHRoaWRkZW5PblN0YXJ0OiBmYWxzZSwgLy8gQm9vbGVhblxuXHRcdFx0Z2V0Q29udGVudE9uTG9hZDoge30sIC8vIE9iamVjdFxuXHRcdFx0Y291bnRPbmx5Q2xhc3M6IFwiXCIsIC8vIFN0cmluZ1xuXHRcdFx0c3RhcnRBdEVsZW1lbnRJZDogXCJcIiwgLy8gU3RyaW5nXG5cblx0XHRcdC8vIEhvdHNwb3Qgc2Nyb2xsaW5nXG5cdFx0XHRob3RTcG90U2Nyb2xsaW5nOiB0cnVlLCAvLyBCb29sZWFuXG5cdFx0XHRob3RTcG90U2Nyb2xsaW5nU3RlcDogMTUsIC8vIFBpeGVsc1xuXHRcdFx0aG90U3BvdFNjcm9sbGluZ0ludGVydmFsOiAxMCwgLy8gTWlsbGlzZWNvbmRzXG5cdFx0XHRob3RTcG90TW91c2VEb3duU3BlZWRCb29zdGVyOiAzLCAvLyBJbnRlZ2VyXG5cdFx0XHR2aXNpYmxlSG90U3BvdEJhY2tncm91bmRzOiBcImhvdmVyXCIsIC8vIGFsd2F5cywgb25TdGFydCwgaG92ZXIgb3IgZW1wdHkgKG5vIHZpc2libGUgaG90c3BvdHMpXG5cdFx0XHRob3RTcG90c1Zpc2libGVUaW1lOiA1MDAwLCAvLyBNaWxsaXNlY29uZHNcblx0XHRcdGVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZzogdHJ1ZSwgLy8gQm9vbGVhblxuXHRcdFx0ZWFzaW5nQWZ0ZXJIb3RTcG90U2Nyb2xsaW5nRGlzdGFuY2U6IDEwLCAvLyBQaXhlbHNcblx0XHRcdGVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZ0R1cmF0aW9uOiAzMDAsIC8vIE1pbGxpc2Vjb25kc1xuXHRcdFx0ZWFzaW5nQWZ0ZXJIb3RTcG90U2Nyb2xsaW5nRnVuY3Rpb246IFwiZWFzZU91dFF1YXJ0XCIsIC8vIFN0cmluZ1xuXG5cdFx0XHQvLyBNb3VzZXdoZWVsIHNjcm9sbGluZ1xuXHRcdFx0bW91c2V3aGVlbFNjcm9sbGluZzogXCJcIiwgLy8gdmVydGljYWwsIGhvcml6b250YWwsIGFsbERpcmVjdGlvbnMgb3IgZW1wdHkgKG5vIG1vdXNld2hlZWwgc2Nyb2xsaW5nKSBTdHJpbmdcblx0XHRcdG1vdXNld2hlZWxTY3JvbGxpbmdTdGVwOiA3MCwgLy8gUGl4ZWxzXG5cdFx0XHRlYXNpbmdBZnRlck1vdXNlV2hlZWxTY3JvbGxpbmc6IHRydWUsIC8vIEJvb2xlYW5cblx0XHRcdGVhc2luZ0FmdGVyTW91c2VXaGVlbFNjcm9sbGluZ0R1cmF0aW9uOiAzMDAsIC8vIE1pbGxpc2Vjb25kc1xuXHRcdFx0ZWFzaW5nQWZ0ZXJNb3VzZVdoZWVsU2Nyb2xsaW5nRnVuY3Rpb246IFwiZWFzZU91dFF1YXJ0XCIsIC8vIFN0cmluZ1xuXG5cdFx0XHQvLyBNYW51YWwgc2Nyb2xsaW5nIChob3RzcG90IGFuZC9vciBtb3VzZXdoZWVsIHNjcm9sbGluZylcblx0XHRcdG1hbnVhbENvbnRpbnVvdXNTY3JvbGxpbmc6IGZhbHNlLCAvLyBCb29sZWFuXG5cblx0XHRcdC8vIEF1dG9zY3JvbGxpbmdcblx0XHRcdGF1dG9TY3JvbGxpbmdNb2RlOiBcIlwiLCAvLyBhbHdheXMsIG9uU3RhcnQgb3IgZW1wdHkgKG5vIGF1dG8gc2Nyb2xsaW5nKSBTdHJpbmdcblx0XHRcdGF1dG9TY3JvbGxpbmdEaXJlY3Rpb246IFwiZW5kbGVzc0xvb3BSaWdodFwiLCAvLyByaWdodCwgbGVmdCwgYmFja0FuZEZvcnRoLCBlbmRsZXNzTG9vcFJpZ2h0LCBlbmRsZXNzTG9vcExlZnQgU3RyaW5nXG5cdFx0XHRhdXRvU2Nyb2xsaW5nU3RlcDogMSwgLy8gUGl4ZWxzXG5cdFx0XHRhdXRvU2Nyb2xsaW5nSW50ZXJ2YWw6IDEwLCAvLyBNaWxsaXNlY29uZHNcblxuXHRcdFx0Ly8gVG91Y2ggc2Nyb2xsaW5nXG5cdFx0XHR0b3VjaFNjcm9sbGluZzogZmFsc2UsXG5cblx0XHRcdC8vIEVhc2luZyBmb3Igd2hlbiB0aGUgc2Nyb2xsVG9FbGVtZW50IG1ldGhvZCBpcyB1c2VkXG5cdFx0XHRzY3JvbGxUb0FuaW1hdGlvbkR1cmF0aW9uOiAxMDAwLCAvLyBNaWxsaXNlY29uZHNcblx0XHRcdHNjcm9sbFRvRWFzaW5nRnVuY3Rpb246IFwiZWFzZU91dFF1YXJ0XCIgLy8gU3RyaW5nXG5cdFx0fSxcblx0XHRfY3JlYXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsIG8gPSB0aGlzLm9wdGlvbnMsIGVsID0gdGhpcy5lbGVtZW50O1xuXG5cdFx0XHQvLyBDcmVhdGUgdmFyaWFibGVzIGZvciBhbnkgZXhpc3Rpbmcgb3Igbm90IGV4aXN0aW5nIFxuXHRcdFx0Ly8gc2Nyb2xsZXIgZWxlbWVudHMgb24gdGhlIHBhZ2UuXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiLCBlbC5maW5kKFwiLlwiICsgby5zY3JvbGxXcmFwcGVyQ2xhc3MpKTtcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIiwgZWwuZmluZChcIi5cIiArIG8uc2Nyb2xsaW5nSG90U3BvdFJpZ2h0Q2xhc3MpKTtcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiLCBlbC5maW5kKFwiLlwiICsgby5zY3JvbGxpbmdIb3RTcG90TGVmdENsYXNzKSk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIiwgZWwuZmluZChcIi5cIiArIG8uc2Nyb2xsYWJsZUFyZWFDbGFzcykpO1xuXG5cdFx0XHQvLyBDaGVjayB3aGljaCBlbGVtZW50cyBhcmUgYWxyZWFkeSBwcmVzZW50IG9uIHRoZSBwYWdlLiBcblx0XHRcdC8vIENyZWF0ZSBhbnkgZWxlbWVudHMgbmVlZGVkIGJ5IHRoZSBwbHVnaW4gaWZcblx0XHRcdC8vIHRoZSB1c2VyIGhhc24ndCBhbHJlYWR5IGNyZWF0ZWQgdGhlbS5cblxuXHRcdFx0Ly8gRmlyc3QgZGV0YWNoIGFueSBwcmVzZW50IGhvdCBzcG90c1xuXHRcdFx0aWYgKGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikubGVuZ3RoID4gMCkge1xuXG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikuZGV0YWNoKCk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmxlbmd0aCA+IDApIHtcblxuXHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikuZGV0YWNoKCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJvdGggdGhlIHNjcm9sbGFibGUgYXJlYSBhbmQgdGhlIHdyYXBwZXIgYXJlIG1pc3Npbmdcblx0XHRcdGlmIChlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikubGVuZ3RoID09PSAwICYmIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRlbC53cmFwSW5uZXIoXCI8ZGl2IGNsYXNzPSdcIiArIG8uc2Nyb2xsYWJsZUFyZWFDbGFzcyArIFwiJz5cIikud3JhcElubmVyKFwiPGRpdiBjbGFzcz0nXCIgKyBvLnNjcm9sbFdyYXBwZXJDbGFzcyArIFwiJz5cIik7XG5cblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIiwgZWwuZmluZChcIi5cIiArIG8uc2Nyb2xsV3JhcHBlckNsYXNzKSk7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiLCBlbC5maW5kKFwiLlwiICsgby5zY3JvbGxhYmxlQXJlYUNsYXNzKSk7XG5cdFx0XHR9XG5cdFx0XHQvLyBPbmx5IHRoZSB3cmFwcGVyIGlzIG1pc3Npbmdcblx0XHRcdGVsc2UgaWYgKGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRlbC53cmFwSW5uZXIoXCI8ZGl2IGNsYXNzPSdcIiArIG8uc2Nyb2xsV3JhcHBlckNsYXNzICsgXCInPlwiKTtcblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIiwgZWwuZmluZChcIi5cIiArIG8uc2Nyb2xsV3JhcHBlckNsYXNzKSk7XG5cdFx0XHR9XG5cdFx0XHQvLyBPbmx5IHRoZSBzY3JvbGxhYmxlIGFyZWEgaXMgbWlzc2luZ1xuXHRcdFx0ZWxzZSBpZiAoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmxlbmd0aCA9PT0gMCkge1xuXHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS53cmFwSW5uZXIoXCI8ZGl2IGNsYXNzPSdcIiArIG8uc2Nyb2xsYWJsZUFyZWFDbGFzcyArIFwiJz5cIik7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiLCBlbC5maW5kKFwiLlwiICsgby5zY3JvbGxhYmxlQXJlYUNsYXNzKSk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCB0aGUgcmlnaHQgYW5kIGxlZnQgaG90IHNwb3QgYmFjayBpbnRvIHRoZSBzY3JvbGxlciBhZ2FpblxuXHRcdFx0Ly8gb3IgY3JlYXRlIHRoZW0gaWYgdGhleSB3aGVyZSBub3QgcHJlc2VudCBmcm9tIHRoZSBiZWdpbm5pbmcuXG5cdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS5sZW5ndGggPT09IDApIHtcblx0XHRcdFx0ZWwucHJlcGVuZChcIjxkaXYgY2xhc3M9J1wiICsgby5zY3JvbGxpbmdIb3RTcG90UmlnaHRDbGFzcyArIFwiJz48L2Rpdj5cIik7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIiwgZWwuZmluZChcIi5cIiArIG8uc2Nyb2xsaW5nSG90U3BvdFJpZ2h0Q2xhc3MpKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsLnByZXBlbmQoZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKSk7XG5cdFx0XHR9XG5cblx0XHRcdGlmIChlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikubGVuZ3RoID09PSAwKSB7XG5cdFx0XHRcdGVsLnByZXBlbmQoXCI8ZGl2IGNsYXNzPSdcIiArIG8uc2Nyb2xsaW5nSG90U3BvdExlZnRDbGFzcyArIFwiJz48L2Rpdj5cIik7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiLCBlbC5maW5kKFwiLlwiICsgby5zY3JvbGxpbmdIb3RTcG90TGVmdENsYXNzKSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbC5wcmVwZW5kKGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKSk7XG5cdFx0XHR9XG5cblxuXHRcdFx0Ly8gQ3JlYXRlIHZhcmlhYmxlcyBpbiB0aGUgZWxlbWVudCBkYXRhIHN0b3JhZ2Vcblx0XHRcdGVsLmRhdGEoXCJzcGVlZEJvb3N0ZXJcIiwgMSk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsWFBvc1wiLCAwKTtcblx0XHRcdGVsLmRhdGEoXCJob3RTcG90V2lkdGhcIiwgZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmlubmVyV2lkdGgoKSk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFXaWR0aFwiLCAwKTtcblx0XHRcdGVsLmRhdGEoXCJzdGFydGluZ1Bvc2l0aW9uXCIsIDApO1xuXHRcdFx0ZWwuZGF0YShcInJpZ2h0U2Nyb2xsaW5nSW50ZXJ2YWxcIiwgbnVsbCk7XG5cdFx0XHRlbC5kYXRhKFwibGVmdFNjcm9sbGluZ0ludGVydmFsXCIsIG51bGwpO1xuXHRcdFx0ZWwuZGF0YShcImF1dG9TY3JvbGxpbmdJbnRlcnZhbFwiLCBudWxsKTtcblx0XHRcdGVsLmRhdGEoXCJoaWRlSG90U3BvdEJhY2tncm91bmRzSW50ZXJ2YWxcIiwgbnVsbCk7XG5cdFx0XHRlbC5kYXRhKFwicHJldmlvdXNTY3JvbGxMZWZ0XCIsIDApO1xuXHRcdFx0ZWwuZGF0YShcInBpbmdQb25nRGlyZWN0aW9uXCIsIFwicmlnaHRcIik7XG5cdFx0XHRlbC5kYXRhKFwiZ2V0TmV4dEVsZW1lbnRXaWR0aFwiLCB0cnVlKTtcblx0XHRcdGVsLmRhdGEoXCJzd2FwQXRcIiwgbnVsbCk7XG5cdFx0XHRlbC5kYXRhKFwic3RhcnRBdEVsZW1lbnRIYXNOb3RQYXNzZWRcIiwgdHJ1ZSk7XG5cdFx0XHRlbC5kYXRhKFwic3dhcHBlZEVsZW1lbnRcIiwgbnVsbCk7XG5cdFx0XHRlbC5kYXRhKFwib3JpZ2luYWxFbGVtZW50c1wiLCBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oby5jb3VudE9ubHlDbGFzcykpO1xuXHRcdFx0ZWwuZGF0YShcInZpc2libGVcIiwgdHJ1ZSk7XG5cdFx0XHRlbC5kYXRhKFwiZW5hYmxlZFwiLCB0cnVlKTtcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYUhlaWdodFwiLCBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuaGVpZ2h0KCkpO1xuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGVyT2Zmc2V0XCIsIGVsLm9mZnNldCgpKTtcblxuXHRcdFx0LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0XHRTRVQgVVAgRVZFTlRTIEZPUiBUT1VDSCBTQ1JPTExJTkdcblx0XHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdFx0aWYgKG8udG91Y2hTY3JvbGxpbmcgJiYgZWwuZGF0YShcImVuYWJsZWRcIikpIHtcblx0XHRcdFx0Ly8gVXNlIGpxdWVyeS5raW5ldGljLmpzIGZvciB0b3VjaCBzY3JvbGxpbmdcblx0XHRcdFx0Ly8gVmVydGljYWwgc2Nyb2xsaW5nIGRpc2FibGVkXG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmtpbmV0aWMoe1xuXHRcdFx0XHRcdHk6IGZhbHNlLFxuXHRcdFx0XHRcdG1vdmVkOiBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcblx0XHRcdFx0XHRcdGlmIChvLm1hbnVhbENvbnRpbnVvdXNTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHRcdFx0aWYgKGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSA8PSAwKSB7XG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5fY2hlY2tDb250aW51b3VzU3dhcExlZnQoKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRzZWxmLl9jaGVja0NvbnRpbnVvdXNTd2FwUmlnaHQoKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XG5cdFx0XHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcInRvdWNoTW92ZWRcIik7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRzdG9wcGVkOiBmdW5jdGlvbiAoc2V0dGluZ3MpIHtcblx0XHRcdFx0XHRcdC8vIFN0b3AgYW55IG9uZ29pbmcgYW5pbWF0aW9uc1xuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc3RvcCh0cnVlLCBmYWxzZSk7XG5cblx0XHRcdFx0XHRcdC8vIFN0b3AgYW55IG9uZ29pbmcgYXV0byBzY3JvbGxpbmdcblx0XHRcdFx0XHRcdHNlbGYuc3RvcEF1dG9TY3JvbGxpbmcoKTtcblx0XHRcdFx0XHRcdFxuXHRcdFx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJ0b3VjaFN0b3BwZWRcIik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0XHRTRVQgVVAgRVZFTlRTIEZPUiBTQ1JPTExJTkcgUklHSFRcblx0XHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdFx0Ly8gQ2hlY2sgdGhlIG1vdXNlIFggcG9zaXRpb24gYW5kIGNhbGN1bGF0ZSBcblx0XHRcdC8vIHRoZSByZWxhdGl2ZSBYIHBvc2l0aW9uIGluc2lkZSB0aGUgcmlnaHQgaG90c3BvdFxuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS5iaW5kKFwibW91c2Vtb3ZlXCIsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdGlmIChvLmhvdFNwb3RTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHR2YXIgeCA9IGUucGFnZVggLSAkKHRoaXMpLm9mZnNldCgpLmxlZnQ7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFhQb3NcIiwgTWF0aC5yb3VuZCgoeCAvIGVsLmRhdGEoXCJob3RTcG90V2lkdGhcIikpICogby5ob3RTcG90U2Nyb2xsaW5nU3RlcCkpO1xuXG5cdFx0XHRcdFx0Ly8gSWYgdGhlIHBvc2l0aW9uIGlzIGxlc3MgdGhlbiAxLCBpdCdzIHNldCB0byAxXG5cdFx0XHRcdFx0aWYgKGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIpID09PSBJbmZpbml0eSB8fCBlbC5kYXRhKFwic2Nyb2xsWFBvc1wiKSA8IDEpIHtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIsIDEpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdC8vIE1vdXNlb3ZlciByaWdodCBob3RzcG90IC0gc2Nyb2xsaW5nXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLmJpbmQoXCJtb3VzZW92ZXJcIiwgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRpZiAoby5ob3RTcG90U2Nyb2xsaW5nKSB7XG5cdFx0XHRcdFx0Ly8gU3RvcCBhbnkgb25nb2luZyBhbmltYXRpb25zXG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc3RvcCh0cnVlLCBmYWxzZSk7XG5cblx0XHRcdFx0XHQvLyBTdG9wIGFueSBvbmdvaW5nIGF1dG8gc2Nyb2xsaW5nXG5cdFx0XHRcdFx0c2VsZi5zdG9wQXV0b1Njcm9sbGluZygpO1xuXG5cdFx0XHRcdFx0Ly8gU3RhcnQgdGhlIHNjcm9sbGluZyBpbnRlcnZhbFxuXHRcdFx0XHRcdGVsLmRhdGEoXCJyaWdodFNjcm9sbGluZ0ludGVydmFsXCIsIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdGlmIChlbC5kYXRhKFwic2Nyb2xsWFBvc1wiKSA+IDAgJiYgZWwuZGF0YShcImVuYWJsZWRcIikpIHtcblx0XHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdChlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkgKyAoZWwuZGF0YShcInNjcm9sbFhQb3NcIikgKiBlbC5kYXRhKFwic3BlZWRCb29zdGVyXCIpKSk7XG5cblx0XHRcdFx0XHRcdFx0aWYgKG8ubWFudWFsQ29udGludW91c1Njcm9sbGluZykge1xuXHRcdFx0XHRcdFx0XHRcdHNlbGYuX2NoZWNrQ29udGludW91c1N3YXBSaWdodCgpO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0sIG8uaG90U3BvdFNjcm9sbGluZ0ludGVydmFsKSk7XG5cblx0XHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJtb3VzZU92ZXJSaWdodEhvdFNwb3RcIik7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHQvLyBNb3VzZW91dCByaWdodCBob3RzcG90IC0gc3RvcCBzY3JvbGxpbmdcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikuYmluZChcIm1vdXNlb3V0XCIsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0aWYgKG8uaG90U3BvdFNjcm9sbGluZykge1xuXHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoZWwuZGF0YShcInJpZ2h0U2Nyb2xsaW5nSW50ZXJ2YWxcIikpO1xuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIsIDApO1xuXG5cdFx0XHRcdFx0Ly8gRWFzaW5nIG91dCBhZnRlciBzY3JvbGxpbmdcblx0XHRcdFx0XHRpZiAoby5lYXNpbmdBZnRlckhvdFNwb3RTY3JvbGxpbmcgJiYgZWwuZGF0YShcImVuYWJsZWRcIikpIHtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmFuaW1hdGUoeyBzY3JvbGxMZWZ0OiBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkgKyBvLmVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZ0Rpc3RhbmNlIH0sIHsgZHVyYXRpb246IG8uZWFzaW5nQWZ0ZXJIb3RTcG90U2Nyb2xsaW5nRHVyYXRpb24sIGVhc2luZzogby5lYXNpbmdBZnRlckhvdFNwb3RTY3JvbGxpbmdGdW5jdGlvbiB9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cblx0XHRcdC8vIG1vdXNlZG93biByaWdodCBob3RzcG90IChhZGQgc2Nyb2xsaW5nIHNwZWVkIGJvb3N0ZXIpXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLmJpbmQoXCJtb3VzZWRvd25cIiwgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRlbC5kYXRhKFwic3BlZWRCb29zdGVyXCIsIG8uaG90U3BvdE1vdXNlRG93blNwZWVkQm9vc3Rlcik7XG5cdFx0XHR9KTtcblxuXHRcdFx0Ly8gbW91c2V1cCBhbnl3aGVyZSAoc3RvcCBib29zdGluZyB0aGUgc2Nyb2xsaW5nIHNwZWVkKVxuXHRcdFx0JChcImJvZHlcIikuYmluZChcIm1vdXNldXBcIiwgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRlbC5kYXRhKFwic3BlZWRCb29zdGVyXCIsIDEpO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdFx0U0VUIFVQIEVWRU5UUyBGT1IgU0NST0xMSU5HIExFRlRcblx0XHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdFx0Ly8gQ2hlY2sgdGhlIG1vdXNlIFggcG9zaXRpb24gYW5kIGNhbGN1bGF0ZVxuXHRcdFx0Ly8gdGhlIHJlbGF0aXZlIFggcG9zaXRpb24gaW5zaWRlIHRoZSBsZWZ0IGhvdHNwb3Rcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5iaW5kKFwibW91c2Vtb3ZlXCIsIGZ1bmN0aW9uIChlKSB7XG5cdFx0XHRcdGlmIChvLmhvdFNwb3RTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHR2YXIgeCA9IGVsLmRhdGEoXCJob3RTcG90V2lkdGhcIikgLSAoZS5wYWdlWCAtICQodGhpcykub2Zmc2V0KCkubGVmdCk7XG5cblx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsWFBvc1wiLCBNYXRoLnJvdW5kKCh4IC8gZWwuZGF0YShcImhvdFNwb3RXaWR0aFwiKSkgKiBvLmhvdFNwb3RTY3JvbGxpbmdTdGVwKSk7XG5cblx0XHRcdFx0XHQvLyBJZiB0aGUgcG9zaXRpb24gaXMgbGVzcyB0aGVuIDEsIGl0J3Mgc2V0IHRvIDFcblx0XHRcdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbFhQb3NcIikgPT09IEluZmluaXR5IHx8IGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIpIDwgMSkge1xuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFhQb3NcIiwgMSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0Ly8gTW91c2VvdmVyIGxlZnQgaG90c3BvdFxuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmJpbmQoXCJtb3VzZW92ZXJcIiwgZnVuY3Rpb24gKCkge1xuXHRcdFx0XHRpZiAoby5ob3RTcG90U2Nyb2xsaW5nKSB7XG5cdFx0XHRcdFx0Ly8gU3RvcCBhbnkgb25nb2luZyBhbmltYXRpb25zXG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc3RvcCh0cnVlLCBmYWxzZSk7XG5cblx0XHRcdFx0XHQvLyBTdG9wIGFueSBvbmdvaW5nIGF1dG8gc2Nyb2xsaW5nXG5cdFx0XHRcdFx0c2VsZi5zdG9wQXV0b1Njcm9sbGluZygpO1xuXG5cdFx0XHRcdFx0ZWwuZGF0YShcImxlZnRTY3JvbGxpbmdJbnRlcnZhbFwiLCBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbFhQb3NcIikgPiAwICYmIGVsLmRhdGEoXCJlbmFibGVkXCIpKSB7XG5cdFx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpIC0gKGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIpICogZWwuZGF0YShcInNwZWVkQm9vc3RlclwiKSkpO1xuXG5cdFx0XHRcdFx0XHRcdGlmIChvLm1hbnVhbENvbnRpbnVvdXNTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHRcdFx0XHRzZWxmLl9jaGVja0NvbnRpbnVvdXNTd2FwTGVmdCgpO1xuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0sIG8uaG90U3BvdFNjcm9sbGluZ0ludGVydmFsKSk7XG5cblx0XHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJtb3VzZU92ZXJMZWZ0SG90U3BvdFwiKTtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cblx0XHRcdC8vIG1vdXNlb3V0IGxlZnQgaG90c3BvdFxuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmJpbmQoXCJtb3VzZW91dFwiLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdGlmIChvLmhvdFNwb3RTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHRjbGVhckludGVydmFsKGVsLmRhdGEoXCJsZWZ0U2Nyb2xsaW5nSW50ZXJ2YWxcIikpO1xuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIsIDApO1xuXG5cdFx0XHRcdFx0Ly8gRWFzaW5nIG91dCBhZnRlciBzY3JvbGxpbmdcblx0XHRcdFx0XHRpZiAoby5lYXNpbmdBZnRlckhvdFNwb3RTY3JvbGxpbmcgJiYgZWwuZGF0YShcImVuYWJsZWRcIikpIHtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmFuaW1hdGUoeyBzY3JvbGxMZWZ0OiBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkgLSBvLmVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZ0Rpc3RhbmNlIH0sIHsgZHVyYXRpb246IG8uZWFzaW5nQWZ0ZXJIb3RTcG90U2Nyb2xsaW5nRHVyYXRpb24sIGVhc2luZzogby5lYXNpbmdBZnRlckhvdFNwb3RTY3JvbGxpbmdGdW5jdGlvbiB9KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHQvLyBtb3VzZWRvd24gbGVmdCBob3RzcG90IChhZGQgc2Nyb2xsaW5nIHNwZWVkIGJvb3N0ZXIpXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikuYmluZChcIm1vdXNlZG93blwiLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdGVsLmRhdGEoXCJzcGVlZEJvb3N0ZXJcIiwgby5ob3RTcG90TW91c2VEb3duU3BlZWRCb29zdGVyKTtcblx0XHRcdH0pO1xuXG5cdFx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblx0XHRcdFNFVCBVUCBFVkVOVCBGT1IgTU9VU0VXSEVFTCBTQ1JPTExJTkdcblx0XHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLm1vdXNld2hlZWwoZnVuY3Rpb24gKGV2ZW50LCBkZWx0YSwgZGVsdGFYLCBkZWx0YVkpIHtcblxuXHRcdFx0XHRpZiAoZWwuZGF0YShcImVuYWJsZWRcIikgJiYgby5tb3VzZXdoZWVsU2Nyb2xsaW5nLmxlbmd0aCA+IDApIHtcblx0XHRcdFx0XHR2YXIgcGl4ZWxzO1xuXG5cdFx0XHRcdFx0Ly8gQ2FuIGJlIGVpdGhlciBwb3NpdGl2ZSBvciBuZWdhdGl2ZVxuXHRcdFx0XHRcdC8vIElzIG11bHRpcGxpZWQvaW52ZXJ0ZWQgYnkgbWludXMgb25lIHNpbmNlIHlvdSB3YW50IGl0IHRvIHNjcm9sbCBcblx0XHRcdFx0XHQvLyBsZWZ0IHdoZW4gbW92aW5nIHRoZSB3aGVlbCBkb3duL3JpZ2h0IGFuZCByaWdodCB3aGVuIG1vdmluZyB0aGUgd2hlZWwgdXAvbGVmdFxuXHRcdFx0XHRcdGlmIChvLm1vdXNld2hlZWxTY3JvbGxpbmcgPT09IFwidmVydGljYWxcIiAmJiBkZWx0YVkgIT09IDApIHtcblx0XHRcdFx0XHRcdC8vIFN0b3AgYW55IG9uZ29pbmcgYXV0byBzY3JvbGxpbmcgaWYgaXQncyBydW5uaW5nXG5cdFx0XHRcdFx0XHRzZWxmLnN0b3BBdXRvU2Nyb2xsaW5nKCk7XG5cdFx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0cGl4ZWxzID0gTWF0aC5yb3VuZCgoby5tb3VzZXdoZWVsU2Nyb2xsaW5nU3RlcCAqIGRlbHRhWSkgKiAtMSk7XG5cdFx0XHRcdFx0XHRzZWxmLm1vdmUocGl4ZWxzKTtcblx0XHRcdFx0XHR9IGVsc2UgaWYgKG8ubW91c2V3aGVlbFNjcm9sbGluZyA9PT0gXCJob3Jpem9udGFsXCIgJiYgZGVsdGFYICE9PSAwKSB7XG5cdFx0XHRcdFx0XHQvLyBTdG9wIGFueSBvbmdvaW5nIGF1dG8gc2Nyb2xsaW5nIGlmIGl0J3MgcnVubmluZ1xuXHRcdFx0XHRcdFx0c2VsZi5zdG9wQXV0b1Njcm9sbGluZygpO1xuXHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdHBpeGVscyA9IE1hdGgucm91bmQoKG8ubW91c2V3aGVlbFNjcm9sbGluZ1N0ZXAgKiBkZWx0YVgpICogLTEpO1xuXHRcdFx0XHRcdFx0c2VsZi5tb3ZlKHBpeGVscyk7XG5cdFx0XHRcdFx0fSBlbHNlIGlmIChvLm1vdXNld2hlZWxTY3JvbGxpbmcgPT09IFwiYWxsRGlyZWN0aW9uc1wiKSB7XG5cdFx0XHRcdFx0XHQvLyBTdG9wIGFueSBvbmdvaW5nIGF1dG8gc2Nyb2xsaW5nIGlmIGl0J3MgcnVubmluZ1xuXHRcdFx0XHRcdFx0c2VsZi5zdG9wQXV0b1Njcm9sbGluZygpO1xuXHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdHBpeGVscyA9IE1hdGgucm91bmQoKG8ubW91c2V3aGVlbFNjcm9sbGluZ1N0ZXAgKiBkZWx0YSkgKiAtMSk7XG5cdFx0XHRcdFx0XHRzZWxmLm1vdmUocGl4ZWxzKTtcblx0XHRcdFx0XHR9XG5cblxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0Ly8gQ2FwdHVyZSBhbmQgZGlzYWJsZSBtb3VzZXdoZWVsIGV2ZW50cyB3aGVuIHRoZSBwb2ludGVyXG5cdFx0XHQvLyBpcyBvdmVyIGFueSBvZiB0aGUgaG90c3BvdHNcblx0XHRcdGlmIChvLm1vdXNld2hlZWxTY3JvbGxpbmcpIHtcblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmFkZChlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpKS5tb3VzZXdoZWVsKGZ1bmN0aW9uIChldmVudCkge1xuXHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXG5cdFx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblx0XHRcdFNFVCBVUCBFVkVOVCBGT1IgUkVTSVpJTkcgVEhFIEJST1dTRVIgV0lORE9XXG5cdFx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHRcdCQod2luZG93KS5iaW5kKFwicmVzaXplXCIsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwid2luZG93UmVzaXplZFwiKTtcblx0XHRcdH0pO1xuXG5cdFx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblx0XHRcdEZFVENISU5HIENPTlRFTlQgT04gSU5JVElBTElaQVRJT05cblx0XHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdFx0Ly8gSWYgZ2V0Q29udGVudE9uTG9hZCBpcyBwcmVzZW50IGluIHRoZSBvcHRpb25zLCBcblx0XHRcdC8vIHNvcnQgb3V0IHRoZSBtZXRob2QgYW5kIHBhcmFtZXRlcnMgYW5kIGdldCB0aGUgY29udGVudFxuXG5cdFx0XHRpZiAoIShqUXVlcnkuaXNFbXB0eU9iamVjdChvLmdldENvbnRlbnRPbkxvYWQpKSkge1xuXHRcdFx0XHRzZWxmW28uZ2V0Q29udGVudE9uTG9hZC5tZXRob2RdKG8uZ2V0Q29udGVudE9uTG9hZC5jb250ZW50LCBvLmdldENvbnRlbnRPbkxvYWQubWFuaXB1bGF0aW9uTWV0aG9kLCBvLmdldENvbnRlbnRPbkxvYWQuYWRkV2hlcmUsIG8uZ2V0Q29udGVudE9uTG9hZC5maWx0ZXJUYWcpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG91bGQgaXQgYmUgaGlkZGVuIG9uIHN0YXJ0P1xuXHRcdFx0aWYgKG8uaGlkZGVuT25TdGFydCkge1xuXHRcdFx0XHRzZWxmLmhpZGUoKTtcblx0XHRcdH1cblxuXHRcdFx0LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0XHRBVVRPU0NST0xMSU5HXG5cdFx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHRcdC8vIFRoZSAkKHdpbmRvdykubG9hZCBldmVudCBoYW5kbGVyIGlzIHVzZWQgYmVjYXVzZSB0aGUgd2lkdGggb2YgdGhlIGVsZW1lbnRzIGFyZSBub3QgY2FsY3VsYXRlZFxuXHRcdFx0Ly8gcHJvcGVybHkgdW50aWwgdGhlbiwgYXQgbGVhc3Qgbm90IGluIEdvb2dsZSBDaHJvbWUuIFRoZSBzdGFydCBvZiB0aGUgYXV0byBzY3JvbGxpbmcgYW5kIHRoZVxuXHRcdFx0Ly8gc2V0dGluZyBvZiB0aGUgaG90c3BvdCBiYWNrZ3JvdW5kcyBpcyBzdGFydGVkIGhlcmUgYXMgd2VsbCBmb3IgdGhlIHNhbWUgcmVhc29uLiBcblx0XHRcdC8vIElmIHRoZSBhdXRvIHNjcm9sbGluZyBpcyBub3Qgc3RhcnRlZCBpbiAkKHdpbmRvdykubG9hZCwgaXQgd29uJ3Qgc3RhcnQgYmVjYXVzZSBpdCBcblx0XHRcdC8vIHdpbGwgaW50ZXJwcmV0IHRoZSBzY3JvbGxhYmxlIGFyZWFzIGFzIHRvbyBzaG9ydC5cblx0XHRcdCQod2luZG93KS5sb2FkKGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0XHQvLyBJZiBzY3JvbGxlciBpcyBub3QgaGlkZGVuLCByZWNhbGN1bGF0ZSB0aGUgc2Nyb2xsYWJsZSBhcmVhXG5cdFx0XHRcdGlmICghKG8uaGlkZGVuT25TdGFydCkpIHtcblx0XHRcdFx0XHRzZWxmLnJlY2FsY3VsYXRlU2Nyb2xsYWJsZUFyZWEoKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF1dG9zY3JvbGxpbmcgaXMgYWN0aXZlXG5cdFx0XHRcdGlmICgoby5hdXRvU2Nyb2xsaW5nTW9kZS5sZW5ndGggPiAwKSAmJiAhKG8uaGlkZGVuT25TdGFydCkpIHtcblx0XHRcdFx0XHRzZWxmLnN0YXJ0QXV0b1Njcm9sbGluZygpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gSWYgdGhlIHVzZXIgd2FudHMgdG8gaGF2ZSB2aXNpYmxlIGhvdHNwb3QgYmFja2dyb3VuZHMsIFxuXHRcdFx0XHQvLyBoZXJlIGlzIHdoZXJlIGl0J3MgdGFrZW4gY2FyZSBvZlxuXHRcdFx0XHRpZiAoby5hdXRvU2Nyb2xsaW5nTW9kZSAhPT0gXCJhbHdheXNcIikge1xuXG5cdFx0XHRcdFx0c3dpdGNoIChvLnZpc2libGVIb3RTcG90QmFja2dyb3VuZHMpIHtcblx0XHRcdFx0XHRcdGNhc2UgXCJhbHdheXNcIjpcblx0XHRcdFx0XHRcdFx0c2VsZi5zaG93SG90U3BvdEJhY2tncm91bmRzKCk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSBcIm9uU3RhcnRcIjpcblx0XHRcdFx0XHRcdFx0c2VsZi5zaG93SG90U3BvdEJhY2tncm91bmRzKCk7XG5cdFx0XHRcdFx0XHRcdGVsLmRhdGEoXCJoaWRlSG90U3BvdEJhY2tncm91bmRzSW50ZXJ2YWxcIiwgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5oaWRlSG90U3BvdEJhY2tncm91bmRzKDI1MCk7XG5cdFx0XHRcdFx0XHRcdH0sIG8uaG90U3BvdHNWaXNpYmxlVGltZSkpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgXCJob3ZlclwiOlxuXHRcdFx0XHRcdFx0XHRlbC5tb3VzZWVudGVyKGZ1bmN0aW9uIChldmVudCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChvLmhvdFNwb3RTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0XHRcdFx0c2VsZi5zaG93SG90U3BvdEJhY2tncm91bmRzKDI1MCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9KS5tb3VzZWxlYXZlKGZ1bmN0aW9uIChldmVudCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmIChvLmhvdFNwb3RTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0XHRcdFx0c2VsZi5oaWRlSG90U3BvdEJhY2tncm91bmRzKDI1MCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRzZWxmLl9zaG93SGlkZUhvdFNwb3RzKCk7XG5cblx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcInNldHVwQ29tcGxldGVcIik7XG5cblx0XHRcdH0pO1xuXG5cdFx0fSxcblx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdF9pbml0IFxuXHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cdFx0Ly8gV2hlbiB0aGUgY29udGVudHMgb2YgdGhlIHNjcm9sbGFibGUgYXJlYSBpcyBjaGFuZ2VkIG91dHNpZGUgdGhlIHdpZGdldCxcblx0XHQvLyB0aGUgd2lkZ2V0IG11c3QgYmUgcmVpbml0aWxhaXplZC5cblx0XHQvLyBUaGlzIGNvZGUgaXMgcnVuIGV2ZXJ5IHRpbWUgdGhlIHdpZGdldCBpcyBjYWxsZWQgd2l0aG91dCBhcmd1bWVudHNcblx0XHQgX2luaXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcywgZWwgPSB0aGlzLmVsZW1lbnQ7XG5cdFx0IFxuXHRcdFx0Ly8gUmVjYWxjdWxhdGUgdGhlIHRvdGFsIHdpZHRoIG9mIHRoZSBlbGVtZW50cyBpbnNpZGUgdGhlIHNjcm9sbGFibGUgYXJlYVxuXHRcdFx0c2VsZi5yZWNhbGN1bGF0ZVNjcm9sbGFibGVBcmVhKCk7XG5cdFx0IFxuXHRcdFx0Ly8gRGV0ZXJtaW5lIHdoaWNoIGhvdHNwb3RzIHRvIHNob3dcblx0XHRcdHNlbGYuX3Nob3dIaWRlSG90U3BvdHMoKTtcblx0XHRcblx0XHRcdC8vIFRyaWdnZXIgY2FsbGJhY2tcblx0XHRcdHNlbGYuX3RyaWdnZXIoXCJpbml0aWFsaXphdGlvbkNvbXBsZXRlXCIpO1xuXHRcdH0sXG5cdFx0LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblx0XHRPdmVycmlkZSBfc2V0T3B0aW9uIGFuZCBoYW5kbGUgYWx0ZXJlZCBvcHRpb25zXG5cdFx0KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHRfc2V0T3B0aW9uOiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLCBvID0gdGhpcy5vcHRpb25zLCBlbCA9IHRoaXMuZWxlbWVudDtcblxuXHRcdFx0Ly8gVXBkYXRlIG9wdGlvblxuXHRcdFx0b1trZXldID0gdmFsdWU7XG5cblx0XHRcdGlmIChrZXkgPT09IFwiaG90U3BvdFNjcm9sbGluZ1wiKSB7XG5cdFx0XHRcdC8vIEhhbmRsZXIgaWYgdGhlIG9wdGlvbiBob3RTcG90U2Nyb2xsaW5nIGlzIGFsdGVyZWRcblx0XHRcdFx0aWYgKHZhbHVlID09PSB0cnVlKSB7XG5cdFx0XHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5oaWRlKCk7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS5oaWRlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSBpZiAoa2V5ID09PSBcImF1dG9TY3JvbGxpbmdTdGVwXCIgfHxcblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IGNlcnRhaW4gdmFsdWVzIGFyZSBpbnRlZ2Vycywgb3RoZXJ3aXNlXG5cdFx0XHQvLyB0aGV5IHdpbGwgc3VtbW9uIGJhZCBzcGlyaXRzIGluIHRoZSBwbHVnaW5cblx0XHRcdFx0a2V5ID09PSBcImVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZ0Rpc3RhbmNlXCIgfHxcblx0XHRcdFx0a2V5ID09PSBcImVhc2luZ0FmdGVySG90U3BvdFNjcm9sbGluZ0R1cmF0aW9uXCIgfHxcblx0XHRcdFx0a2V5ID09PSBcImVhc2luZ0FmdGVyTW91c2VXaGVlbFNjcm9sbGluZ0R1cmF0aW9uXCIpIHtcblx0XHRcdFx0b1trZXldID0gcGFyc2VJbnQodmFsdWUsIDEwKTtcblx0XHRcdH0gZWxzZSBpZiAoa2V5ID09PSBcImF1dG9TY3JvbGxpbmdJbnRlcnZhbFwiKSB7XG5cdFx0XHRcdC8vIEhhbmRsZXIgaWYgdGhlIGF1dG9TY3JvbGxpbmdJbnRlcnZhbCBpcyBhbHRlcmVkXG5cdFx0XHRcdG9ba2V5XSA9IHBhcnNlSW50KHZhbHVlLCAxMCk7XG5cdFx0XHRcdHNlbGYuc3RhcnRBdXRvU2Nyb2xsaW5nKCk7XG5cdFx0XHR9XG5cblx0XHR9LFxuXHRcdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0SG90c3BvdCBmdW5jdGlvbnNcblx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdHNob3dIb3RTcG90QmFja2dyb3VuZHM6IGZ1bmN0aW9uIChmYWRlU3BlZWQpIHtcblxuXHRcdFx0Ly8gQWx0ZXIgdGhlIENTUyAoU21vb3RoRGl2U2Nyb2xsLmNzcykgaWYgeW91IHdhbnQgdG8gY3VzdG9taXplXG5cdFx0XHQvLyB0aGUgbG9vayduJ2ZlZWwgb2YgdGhlIHZpc2libGUgaG90c3BvdHNcblx0XHRcdHZhciBzZWxmID0gdGhpcywgZWwgPSB0aGlzLmVsZW1lbnQsIG8gPSB0aGlzLm9wdGlvbnM7XG5cblxuXHRcdFx0Ly8gRmFkZSBpbiB0aGUgaG90c3BvdCBiYWNrZ3JvdW5kc1xuXHRcdFx0aWYgKGZhZGVTcGVlZCAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdC8vIEJlZm9yZSB0aGUgZmFkZS1pbiBzdGFydHMsIHdlIG5lZWQgdG8gbWFrZSBzdXJlIHRoZSBvcGFjaXR5IGlzIHplcm9cblx0XHRcdFx0Ly9lbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikuYWRkKGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikpLmNzcyhcIm9wYWNpdHlcIiwgXCIwLjBcIik7XG5cblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmFkZENsYXNzKG8uc2Nyb2xsaW5nSG90U3BvdExlZnRWaXNpYmxlQ2xhc3MpO1xuXHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLmFkZENsYXNzKG8uc2Nyb2xsaW5nSG90U3BvdFJpZ2h0VmlzaWJsZUNsYXNzKTtcblxuXHRcdFx0XHQvLyBGYWRlIGluIHRoZSBob3RzcG90c1xuXHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikuYWRkKGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikpLmZhZGVUbyhmYWRlU3BlZWQsIDAuMzUpO1xuXHRcdFx0fVxuXHRcdFx0Ly8gRG9uJ3QgZmFkZSwganVzdCBzaG93IHRoZW1cblx0XHRcdGVsc2Uge1xuXG5cdFx0XHRcdC8vIFRoZSBsZWZ0IGhvdHNwb3Rcblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmFkZENsYXNzKG8uc2Nyb2xsaW5nSG90U3BvdExlZnRWaXNpYmxlQ2xhc3MpO1xuXHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikucmVtb3ZlQXR0cihcInN0eWxlXCIpO1xuXG5cdFx0XHRcdC8vIFRoZSByaWdodCBob3RzcG90XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikuYWRkQ2xhc3Moby5zY3JvbGxpbmdIb3RTcG90UmlnaHRWaXNpYmxlQ2xhc3MpO1xuXHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcblx0XHRcdH1cblxuXHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXG5cdFx0fSxcblx0XHRoaWRlSG90U3BvdEJhY2tncm91bmRzOiBmdW5jdGlvbiAoZmFkZVNwZWVkKSB7XG5cdFx0XHR2YXIgZWwgPSB0aGlzLmVsZW1lbnQsIG8gPSB0aGlzLm9wdGlvbnM7XG5cblx0XHRcdC8vIEZhZGUgb3V0IHRoZSBob3RzcG90IGJhY2tncm91bmRzXG5cdFx0XHRpZiAoZmFkZVNwZWVkICE9PSB1bmRlZmluZWQpIHtcblxuXHRcdFx0XHQvLyBGYWRlIG91dCB0aGUgbGVmdCBob3RzcG90XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5mYWRlVG8oZmFkZVNwZWVkLCAwLjAsIGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikucmVtb3ZlQ2xhc3Moby5zY3JvbGxpbmdIb3RTcG90TGVmdFZpc2libGVDbGFzcyk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdC8vIEZhZGUgb3V0IHRoZSByaWdodCBob3RzcG90XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikuZmFkZVRvKGZhZGVTcGVlZCwgMC4wLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS5yZW1vdmVDbGFzcyhvLnNjcm9sbGluZ0hvdFNwb3RSaWdodFZpc2libGVDbGFzcyk7XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHR9XG5cdFx0XHQvLyBEb24ndCBmYWRlLCBqdXN0IGhpZGUgdGhlbVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5yZW1vdmVDbGFzcyhvLnNjcm9sbGluZ0hvdFNwb3RMZWZ0VmlzaWJsZUNsYXNzKS5yZW1vdmVBdHRyKFwic3R5bGVcIik7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikucmVtb3ZlQ2xhc3Moby5zY3JvbGxpbmdIb3RTcG90UmlnaHRWaXNpYmxlQ2xhc3MpLnJlbW92ZUF0dHIoXCJzdHlsZVwiKTtcblx0XHRcdH1cblxuXHRcdH0sXG5cdFx0Ly8gRnVuY3Rpb24gZm9yIHNob3dpbmcgYW5kIGhpZGluZyBob3RzcG90cyBkZXBlbmRpbmcgb24gdGhlXG5cdFx0Ly8gb2Zmc2V0IG9mIHRoZSBzY3JvbGxpbmdcblx0XHRfc2hvd0hpZGVIb3RTcG90czogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLCBlbCA9IHRoaXMuZWxlbWVudCwgbyA9IHRoaXMub3B0aW9ucztcblxuXHRcdFx0Ly8gSG90IHNwb3Qgc2Nyb2xsaW5nIGlzIG5vdCBlbmFibGVkIHNvIHNob3cgbm8gaG90IHNwb3RzXG5cdFx0XHRpZiAoIShvLmhvdFNwb3RTY3JvbGxpbmcpKSB7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5oaWRlKCk7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikuaGlkZSgpO1xuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBJZiB0aGUgbWFudWFsIGNvbnRpbnVvdXMgc2Nyb2xsaW5nIG9wdGlvbiBpcyBzZXQgc2hvdyBib3RoXG5cdFx0XHRcdGlmIChvLmhvdFNwb3RTY3JvbGxpbmcgJiYgby5hdXRvU2Nyb2xsaW5nTW9kZSAhPT0gXCJhbHdheXNcIiAmJiBlbC5kYXRhKFwiYXV0b1Njcm9sbGluZ0ludGVydmFsXCIpICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLnNob3coKTtcblx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLnNob3coKTtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBBdXRvc2Nyb2xsaW5nIG5vdCBzZXQgdG8gYWx3YXlzIGFuZCBob3RzcG90IHNjcm9sbGluZyBlbmFibGVkLlxuXHRcdFx0XHQvLyBSZWd1bGFyIGhvdCBzcG90IHNjcm9sbGluZy5cblx0XHRcdFx0ZWxzZSBpZiAoby5hdXRvU2Nyb2xsaW5nTW9kZSAhPT0gXCJhbHdheXNcIiAmJiBvLmhvdFNwb3RTY3JvbGxpbmcpIHtcblx0XHRcdFx0XHQvLyBJZiB0aGUgc2Nyb2xsYWJsZSBhcmVhIGlzIHNob3J0ZXIgdGhhbiB0aGUgc2Nyb2xsIHdyYXBwZXIsIGJvdGggaG90c3BvdHNcblx0XHRcdFx0XHQvLyBzaG91bGQgYmUgaGlkZGVuXG5cdFx0XHRcdFx0aWYgKGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVdpZHRoXCIpIDw9IChlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5pbm5lcldpZHRoKCkpKSB7XG5cdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikuaGlkZSgpO1xuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS5oaWRlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8vIFdoZW4geW91IGNhbid0IHNjcm9sbCBmdXJ0aGVyIGxlZnQgdGhlIGxlZnQgc2Nyb2xsIGhvdHNwb3Qgc2hvdWxkIGJlIGhpZGRlblxuXHRcdFx0XHRcdC8vIGFuZCB0aGUgcmlnaHQgaG90c3BvdCB2aXNpYmxlLlxuXHRcdFx0XHRcdGVsc2UgaWYgKGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSA9PT0gMCkge1xuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLmhpZGUoKTtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikuc2hvdygpO1xuXHRcdFx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJzY3JvbGxlckxlZnRMaW1pdFJlYWNoZWRcIik7XG5cdFx0XHRcdFx0XHQvLyBDbGVhciBpbnRlcnZhbFxuXHRcdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbChlbC5kYXRhKFwibGVmdFNjcm9sbGluZ0ludGVydmFsXCIpKTtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJsZWZ0U2Nyb2xsaW5nSW50ZXJ2YWxcIiwgbnVsbCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdC8vIFdoZW4geW91IGNhbid0IHNjcm9sbCBmdXJ0aGVyIHJpZ2h0XG5cdFx0XHRcdFx0Ly8gdGhlIHJpZ2h0IHNjcm9sbCBob3RzcG90IHNob3VsZCBiZSBoaWRkZW5cblx0XHRcdFx0XHQvLyBhbmQgdGhlIGxlZnQgaG90c3BvdCB2aXNpYmxlXG5cdFx0XHRcdFx0ZWxzZSBpZiAoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhV2lkdGhcIikgPD0gKGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmlubmVyV2lkdGgoKSArIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSkpIHtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5zaG93KCk7XG5cdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLmhpZGUoKTtcblx0XHRcdFx0XHRcdC8vIENhbGxiYWNrXG5cdFx0XHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwic2Nyb2xsZXJSaWdodExpbWl0UmVhY2hlZFwiKTtcblx0XHRcdFx0XHRcdC8vIENsZWFyIGludGVydmFsXG5cdFx0XHRcdFx0XHRjbGVhckludGVydmFsKGVsLmRhdGEoXCJyaWdodFNjcm9sbGluZ0ludGVydmFsXCIpKTtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJyaWdodFNjcm9sbGluZ0ludGVydmFsXCIsIG51bGwpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHQvLyBJZiB5b3UgYXJlIHNvbWV3aGVyZSBpbiB0aGUgbWlkZGxlIG9mIHlvdXJcblx0XHRcdFx0XHQvLyBzY3JvbGxpbmcsIGJvdGggaG90c3BvdHMgc2hvdWxkIGJlIHZpc2libGVcblx0XHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5zaG93KCk7XG5cdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdFJpZ2h0XCIpLnNob3coKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gSWYgYXV0byBzY3JvbGxpbmcgaXMgc2V0IHRvIGFsd2F5cywgdGhlcmUgc2hvdWxkIGJlIG5vIGhvdHNwb3RzXG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90TGVmdFwiKS5oaWRlKCk7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS5oaWRlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXG5cblx0XHR9LFxuXHRcdC8vIEZ1bmN0aW9uIGZvciBjYWxjdWxhdGluZyB0aGUgc2Nyb2xsIHBvc2l0aW9uIG9mIGEgY2VydGFpbiBlbGVtZW50XG5cdFx0X3NldEVsZW1lbnRTY3JvbGxQb3NpdGlvbjogZnVuY3Rpb24gKG1ldGhvZCwgZWxlbWVudCkge1xuXHRcdFx0dmFyIGVsID0gdGhpcy5lbGVtZW50LCBvID0gdGhpcy5vcHRpb25zLCB0ZW1wU2Nyb2xsUG9zaXRpb24gPSAwO1xuXG5cdFx0XHRzd2l0Y2ggKG1ldGhvZCkge1xuXHRcdFx0XHRjYXNlIFwiZmlyc3RcIjpcblx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsWFBvc1wiLCAwKTtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0Y2FzZSBcInN0YXJ0XCI6XG5cdFx0XHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHRoZXJlIGlzIGEgc3BlY2lmaWVkIHN0YXJ0IGVsZW1lbnQgaW4gdGhlIG9wdGlvbnMgXG5cdFx0XHRcdFx0Ly8gYW5kIHRoYXQgdGhlIGVsZW1lbnQgZXhpc3RzIGluIHRoZSBET01cblx0XHRcdFx0XHRpZiAoby5zdGFydEF0RWxlbWVudElkICE9PSBcIlwiKSB7XG5cdFx0XHRcdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmhhcyhcIiNcIiArIG8uc3RhcnRBdEVsZW1lbnRJZCkpIHtcblx0XHRcdFx0XHRcdFx0dGVtcFNjcm9sbFBvc2l0aW9uID0gJChcIiNcIiArIG8uc3RhcnRBdEVsZW1lbnRJZCkucG9zaXRpb24oKS5sZWZ0O1xuXHRcdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsWFBvc1wiLCB0ZW1wU2Nyb2xsUG9zaXRpb24pO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRjYXNlIFwibGFzdFwiOlxuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIsIChlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFXaWR0aFwiKSAtIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmlubmVyV2lkdGgoKSkpO1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRjYXNlIFwibnVtYmVyXCI6XG5cdFx0XHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIHRoYXQgYW4gZWxlbWVudCBudW1iZXIgaXMgcGFzc2VkXG5cdFx0XHRcdFx0aWYgKCEoaXNOYU4oZWxlbWVudCkpKSB7XG5cdFx0XHRcdFx0XHR0ZW1wU2Nyb2xsUG9zaXRpb24gPSBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oby5jb3VudE9ubHlDbGFzcykuZXEoZWxlbWVudCAtIDEpLnBvc2l0aW9uKCkubGVmdDtcblx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxYUG9zXCIsIHRlbXBTY3JvbGxQb3NpdGlvbik7XG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRjYXNlIFwiaWRcIjpcblx0XHRcdFx0XHQvLyBDaGVjayB0aGF0IGFuIGVsZW1lbnQgaWQgaXMgcGFzc2VkIGFuZCB0aGF0IHRoZSBlbGVtZW50IGV4aXN0cyBpbiB0aGUgRE9NXG5cdFx0XHRcdFx0aWYgKGVsZW1lbnQubGVuZ3RoID4gMCkge1xuXHRcdFx0XHRcdFx0aWYgKGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5oYXMoXCIjXCIgKyBlbGVtZW50KSkge1xuXHRcdFx0XHRcdFx0XHR0ZW1wU2Nyb2xsUG9zaXRpb24gPSAkKFwiI1wiICsgZWxlbWVudCkucG9zaXRpb24oKS5sZWZ0O1xuXHRcdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsWFBvc1wiLCB0ZW1wU2Nyb2xsUG9zaXRpb24pO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblxuXG5cdFx0fSxcblx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdEp1bXBpbmcgdG8gYSBjZXJ0YWluIGVsZW1lbnRcblx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdGp1bXBUb0VsZW1lbnQ6IGZ1bmN0aW9uIChqdW1wVG8sIGVsZW1lbnQpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcywgZWwgPSB0aGlzLmVsZW1lbnQ7XG5cblx0XHRcdC8vIENoZWNrIHRvIHNlZSB0aGF0IHRoZSBzY3JvbGxlciBpcyBlbmFibGVkXG5cdFx0XHRpZiAoZWwuZGF0YShcImVuYWJsZWRcIikpIHtcblx0XHRcdFx0Ly8gR2V0IHRoZSBwb3NpdGlvbiBvZiB0aGUgZWxlbWVudCB0byBzY3JvbGwgdG9cblx0XHRcdFx0aWYgKHNlbGYuX3NldEVsZW1lbnRTY3JvbGxQb3NpdGlvbihqdW1wVG8sIGVsZW1lbnQpKSB7XG5cdFx0XHRcdFx0Ly8gSnVtcCB0byB0aGUgZWxlbWVudFxuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFhQb3NcIikpO1xuXHRcdFx0XHRcdC8vIENoZWNrIHRoZSBob3RzcG90c1xuXHRcdFx0XHRcdHNlbGYuX3Nob3dIaWRlSG90U3BvdHMoKTtcblx0XHRcdFx0XHQvLyBUcmlnZ2VyIHRoZSByaWdodCBjYWxsYmFja1xuXHRcdFx0XHRcdHN3aXRjaCAoanVtcFRvKSB7XG5cdFx0XHRcdFx0XHRjYXNlIFwiZmlyc3RcIjpcblx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImp1bXBlZFRvRmlyc3RFbGVtZW50XCIpO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdGNhc2UgXCJzdGFydFwiOlxuXHRcdFx0XHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwianVtcGVkVG9TdGFydEVsZW1lbnRcIik7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSBcImxhc3RcIjpcblx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImp1bXBlZFRvTGFzdEVsZW1lbnRcIik7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSBcIm51bWJlclwiOlxuXHRcdFx0XHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwianVtcGVkVG9FbGVtZW50TnVtYmVyXCIsIG51bGwsIHsgXCJlbGVtZW50TnVtYmVyXCI6IGVsZW1lbnQgfSk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0Y2FzZSBcImlkXCI6XG5cdFx0XHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJqdW1wZWRUb0VsZW1lbnRJZFwiLCBudWxsLCB7IFwiZWxlbWVudElkXCI6IGVsZW1lbnQgfSk7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0U2Nyb2xsaW5nIHRvIGEgY2VydGFpbiBlbGVtZW50XG5cdFx0KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHRzY3JvbGxUb0VsZW1lbnQ6IGZ1bmN0aW9uIChzY3JvbGxUbywgZWxlbWVudCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLCBlbCA9IHRoaXMuZWxlbWVudCwgbyA9IHRoaXMub3B0aW9ucywgYXV0b3Njcm9sbGluZ1dhc1J1bm5pbmcgPSBmYWxzZTtcblxuXHRcdFx0aWYgKGVsLmRhdGEoXCJlbmFibGVkXCIpKSB7XG5cdFx0XHRcdC8vIEdldCB0aGUgcG9zaXRpb24gb2YgdGhlIGVsZW1lbnQgdG8gc2Nyb2xsIHRvXG5cdFx0XHRcdGlmIChzZWxmLl9zZXRFbGVtZW50U2Nyb2xsUG9zaXRpb24oc2Nyb2xsVG8sIGVsZW1lbnQpKSB7XG5cdFx0XHRcdFx0Ly8gU3RvcCBhbnkgb25nb2luZyBhdXRvIHNjcm9sbGluZ1xuXHRcdFx0XHRcdGlmIChlbC5kYXRhKFwiYXV0b1Njcm9sbGluZ0ludGVydmFsXCIpICE9PSBudWxsKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnN0b3BBdXRvU2Nyb2xsaW5nKCk7XG5cdFx0XHRcdFx0XHRhdXRvc2Nyb2xsaW5nV2FzUnVubmluZyA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gU3RvcCBhbnkgb3RoZXIgcnVubmluZyBhbmltYXRpb25zXG5cdFx0XHRcdFx0Ly8gKGNsZWFyIHF1ZXVlIGJ1dCBkb24ndCBqdW1wIHRvIHRoZSBlbmQpXG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc3RvcCh0cnVlLCBmYWxzZSk7XG5cblx0XHRcdFx0XHQvLyBEbyB0aGUgc2NvbGxpbmcgYW5pbWF0aW9uXG5cdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuYW5pbWF0ZSh7XG5cdFx0XHRcdFx0XHRzY3JvbGxMZWZ0OiBlbC5kYXRhKFwic2Nyb2xsWFBvc1wiKVxuXHRcdFx0XHRcdH0sIHsgZHVyYXRpb246IG8uc2Nyb2xsVG9BbmltYXRpb25EdXJhdGlvbiwgZWFzaW5nOiBvLnNjcm9sbFRvRWFzaW5nRnVuY3Rpb24sIGNvbXBsZXRlOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdFx0XHQvLyBJZiBhdXRvIHNjcm9sbGluZyB3YXMgcnVubmluZyBiZWZvcmUsIHN0YXJ0IGl0IGFnYWluXG5cdFx0XHRcdFx0XHRpZiAoYXV0b3Njcm9sbGluZ1dhc1J1bm5pbmcpIHtcblx0XHRcdFx0XHRcdFx0c2VsZi5zdGFydEF1dG9TY3JvbGxpbmcoKTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXG5cdFx0XHRcdFx0XHQvLyBUcmlnZ2VyIHRoZSByaWdodCBjYWxsYmFja1xuXHRcdFx0XHRcdFx0c3dpdGNoIChzY3JvbGxUbykge1xuXHRcdFx0XHRcdFx0XHRjYXNlIFwiZmlyc3RcIjpcblx0XHRcdFx0XHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwic2Nyb2xsZWRUb0ZpcnN0RWxlbWVudFwiKTtcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0Y2FzZSBcInN0YXJ0XCI6XG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcInNjcm9sbGVkVG9TdGFydEVsZW1lbnRcIik7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGNhc2UgXCJsYXN0XCI6XG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcInNjcm9sbGVkVG9MYXN0RWxlbWVudFwiKTtcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0Y2FzZSBcIm51bWJlclwiOlxuXHRcdFx0XHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJzY3JvbGxlZFRvRWxlbWVudE51bWJlclwiLCBudWxsLCB7IFwiZWxlbWVudE51bWJlclwiOiBlbGVtZW50IH0pO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRjYXNlIFwiaWRcIjpcblx0XHRcdFx0XHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwic2Nyb2xsZWRUb0VsZW1lbnRJZFwiLCBudWxsLCB7IFwiZWxlbWVudElkXCI6IGVsZW1lbnQgfSk7XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHR9LFxuXHRcdG1vdmU6IGZ1bmN0aW9uIChwaXhlbHMpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcywgZWwgPSB0aGlzLmVsZW1lbnQsIG8gPSB0aGlzLm9wdGlvbnM7XG5cdFx0XHQvLyBjbGVhciBxdWV1ZSwgbW92ZSB0byBlbmRcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnN0b3AodHJ1ZSwgdHJ1ZSk7XG5cblx0XHRcdC8vIE9ubHkgcnVuIHRoaXMgY29kZSBpZiBpdCdzIHBvc3NpYmxlIHRvIHNjcm9sbCBsZWZ0IG9yIHJpZ2h0LFxuXHRcdFx0aWYgKChwaXhlbHMgPCAwICYmIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSA+IDApIHx8IChwaXhlbHMgPiAwICYmIGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVdpZHRoXCIpID4gKGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmlubmVyV2lkdGgoKSArIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSkpIHx8IG8ubWFudWFsQ29udGludW91c1Njcm9sbGluZyApIHtcblxuICAgICAgICB2YXIgc2Nyb2xsTGVuZ3RoID0gZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLndpZHRoKCkgLSBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS53aWR0aCgpO1xuICAgICAgICB2YXIgc09mZnNldCA9IGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSArIHBpeGVscztcblxuICAgICAgICBpZiggc09mZnNldCA8IDAgKSB7IC8vIFN3YXAgbGFzdCBlbGVtZW50IHRvIGJlIHRoZSBmaXJzdCBvbmUgaWYgc2Nyb2xsIG91dCBvZiB0aGUgbGVmdCBlZGdlIG9mIHZpZXdcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBmb3JjZVN3YXBFbGVtZW50TGVmdCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgIGVsLmRhdGEoXCJzd2FwcGVkRWxlbWVudFwiLCBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oXCI6bGFzdFwiKS5kZXRhY2goKSk7XG4gICAgICAgICAgICAgIGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5wcmVwZW5kKGVsLmRhdGEoXCJzd2FwcGVkRWxlbWVudFwiKSk7XG4gICAgICAgICAgICAgIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpICsgZWwuZGF0YShcInN3YXBwZWRFbGVtZW50XCIpLm91dGVyV2lkdGgodHJ1ZSkpOyAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgXG4gICAgICAgICAgICB3aGlsZShzT2Zmc2V0IDwgMCApeyAvLyBrZWVwIHN3YXAgZWxlbWVudHMgbGVmdCB1bnRpbCBpdCBoYXMgZW5vdWdoIGxlbmd0aCBmb3Igc2Nyb2xsaW5nIGxlZnRcbiAgICAgICAgICAgICAgZm9yY2VTd2FwRWxlbWVudExlZnQoKTtcbiAgICAgICAgICAgICAgc09mZnNldCA9IGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5jaGlsZHJlbihcIjpmaXJzdFwiKS5vdXRlcldpZHRoKHRydWUpICsgc09mZnNldDsgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfSBlbHNlIGlmKCBzT2Zmc2V0IC0gc2Nyb2xsTGVuZ3RoID4gMCApeyAvLyBTd2FwIHRoZSBmaXJzdCBlbGVtZW50IHRvIGJlIHRoZSBsYXN0IG9uZSBpZiBzY3JvbGwgb3V0IG9mIHRoZSByaWdodCBlZGdlIG9mIHZpZXdcbiAgICAgICAgICAgXG4gICAgICAgICAgdmFyIGZvcmNlU3dhcEVsZW1lbnRSaWdodCA9IGZ1bmN0aW9uKCl7ICAgICAgICAgICAgXG4gICAgICAgICAgICBlbC5kYXRhKFwic3dhcHBlZEVsZW1lbnRcIiwgZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLmRldGFjaCgpKTtcbiAgICAgICAgICAgIGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5hcHBlbmQoZWwuZGF0YShcInN3YXBwZWRFbGVtZW50XCIpKTtcbiAgICAgICAgICAgIHZhciB3cmFwcGVyTGVmdCA9IGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKTtcbiAgICAgICAgICAgIGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQod3JhcHBlckxlZnQgLSBlbC5kYXRhKFwic3dhcHBlZEVsZW1lbnRcIikub3V0ZXJXaWR0aCh0cnVlKSk7ICAgICAgICAgICAgXG4gICAgICAgICAgfTtcbiAgICAgICAgICBcbiAgICAgICAgICB3aGlsZSggc09mZnNldCAtIHNjcm9sbExlbmd0aCA+IDAgKXsgLy8ga2VlcCBzd2FwIGVsZW1lbnRzIHJpZ2h0IHVudGlsIGl0IGhhcyBlbm91Z2ggbGVuZ3RoIGZvciBzY3JvbGxpbmcgcmlnaHRcbiAgICAgICAgICAgIGZvcmNlU3dhcEVsZW1lbnRSaWdodCgpO1xuICAgICAgICAgICAgc09mZnNldCA9IHNPZmZzZXQgLSBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oXCI6bGFzdFwiKS5vdXRlcldpZHRoKHRydWUpOyAgICAgICAgICAgICAgXG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICB9XG4gICAgICAgICAgXG5cdFx0XHRcdGlmIChvLmVhc2luZ0FmdGVyTW91c2VXaGVlbFNjcm9sbGluZykge1xuICAgICAgICBcbiAgICAgICAgICBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5hbmltYXRlKHsgc2Nyb2xsTGVmdDogZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpICsgcGl4ZWxzIH0sIHsgZHVyYXRpb246IG8uZWFzaW5nQWZ0ZXJNb3VzZVdoZWVsU2Nyb2xsaW5nRHVyYXRpb24sIGVhc2luZzogby5lYXNpbmdBZnRlck1vdXNlV2hlZWxGdW5jdGlvbiwgY29tcGxldGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHNlbGYuX3Nob3dIaWRlSG90U3BvdHMoKTtcbiAgICAgICAgICAgIGlmIChvLm1hbnVhbENvbnRpbnVvdXNTY3JvbGxpbmcpIHtcbiAgICAgICAgICAgICAgaWYgKHBpeGVscyA+IDApIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9jaGVja0NvbnRpbnVvdXNTd2FwUmlnaHQoKTtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZWxmLl9jaGVja0NvbnRpbnVvdXNTd2FwTGVmdCgpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpICsgcGl4ZWxzKTtcblx0XHRcdFx0XHRzZWxmLl9zaG93SGlkZUhvdFNwb3RzKCk7XG5cblx0XHRcdFx0XHRpZiAoby5tYW51YWxDb250aW51b3VzU2Nyb2xsaW5nKSB7XG5cdFx0XHRcdFx0XHRpZiAocGl4ZWxzID4gMCkge1xuXHRcdFx0XHRcdFx0XHRzZWxmLl9jaGVja0NvbnRpbnVvdXNTd2FwUmlnaHQoKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHNlbGYuX2NoZWNrQ29udGludW91c1N3YXBMZWZ0KCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG4gICAgICAgICBcblxuXHRcdFx0fVxuXG4gICB9LFxuXHRcdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0QWRkaW5nIG9yIHJlcGxhY2luZyBjb250ZW50XG5cdFx0KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHQvKiAgQXJndW1lbnRzIGFyZTpcblx0XHRjb250ZW50IC0gYSB2YWxpZCBVUkwgdG8gYSBGbGlja3IgZmVlZCAtIHN0cmluZ1xuXHRcdG1hbmlwdWxhdGlvbk1ldGhvZCAtIGFkZEZpcnN0LCBhZGRMYXN0IG9yIHJlcGxhY2UgKGRlZmF1bHQpIC0gc3RyaW5nXG5cdFx0Ki9cblx0XHRnZXRGbGlja3JDb250ZW50OiBmdW5jdGlvbiAoY29udGVudCwgbWFuaXB1bGF0aW9uTWV0aG9kKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsIGVsID0gdGhpcy5lbGVtZW50O1xuXG5cdFx0XHQkLmdldEpTT04oY29udGVudCwgZnVuY3Rpb24gKGRhdGEpIHtcblx0XHRcdFx0Ly8gc21hbGwgc3F1YXJlIC0gc2l6ZSBpcyA3NXg3NVxuXHRcdFx0XHQvLyB0aHVtYm5haWwgLT4gbGFyZ2UgLSBzaXplIGlzIHRoZSBsb25nZXN0IHNpZGVcblx0XHRcdFx0dmFyIGZsaWNrckltYWdlU2l6ZXMgPSBbeyBzaXplOiBcInNtYWxsIHNxdWFyZVwiLCBwaXhlbHM6IDc1LCBsZXR0ZXI6IFwiX3NcIiB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IHNpemU6IFwidGh1bWJuYWlsXCIsIHBpeGVsczogMTAwLCBsZXR0ZXI6IFwiX3RcIiB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IHNpemU6IFwic21hbGxcIiwgcGl4ZWxzOiAyNDAsIGxldHRlcjogXCJfbVwiIH0sXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHsgc2l6ZTogXCJtZWRpdW1cIiwgcGl4ZWxzOiA1MDAsIGxldHRlcjogXCJcIiB9LFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IHNpemU6IFwibWVkaXVtIDY0MFwiLCBwaXhlbHM6IDY0MCwgbGV0dGVyOiBcIl96XCIgfSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBzaXplOiBcImxhcmdlXCIsIHBpeGVsczogMTAyNCwgbGV0dGVyOiBcIl9iXCJ9XTtcblx0XHRcdFx0dmFyIGxvYWRlZEZsaWNrckltYWdlcyA9IFtdO1xuXHRcdFx0XHR2YXIgaW1hZ2VJZFN0cmluZ0J1ZmZlciA9IFtdO1xuXHRcdFx0XHR2YXIgc3RhcnRpbmdJbmRleDtcblx0XHRcdFx0dmFyIG51bWJlck9mRmxpY2tySXRlbXMgPSBkYXRhLml0ZW1zLmxlbmd0aDtcblx0XHRcdFx0dmFyIGxvYWRlZEZsaWNrckltYWdlc0NvdW50ZXIgPSAwO1xuXG5cdFx0XHRcdC8vIERldGVybWluZSBhIHBsYXVzaWJsZSBzdGFydGluZyB2YWx1ZSBmb3IgdGhlXG5cdFx0XHRcdC8vIGltYWdlIGhlaWdodFxuXHRcdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhSGVpZ2h0XCIpIDw9IDc1KSB7XG5cdFx0XHRcdFx0c3RhcnRpbmdJbmRleCA9IDA7XG5cdFx0XHRcdH0gZWxzZSBpZiAoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhSGVpZ2h0XCIpIDw9IDEwMCkge1xuXHRcdFx0XHRcdHN0YXJ0aW5nSW5kZXggPSAxO1xuXHRcdFx0XHR9IGVsc2UgaWYgKGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYUhlaWdodFwiKSA8PSAyNDApIHtcblx0XHRcdFx0XHRzdGFydGluZ0luZGV4ID0gMjtcblx0XHRcdFx0fSBlbHNlIGlmIChlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFIZWlnaHRcIikgPD0gNTAwKSB7XG5cdFx0XHRcdFx0c3RhcnRpbmdJbmRleCA9IDM7XG5cdFx0XHRcdH0gZWxzZSBpZiAoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhSGVpZ2h0XCIpIDw9IDY0MCkge1xuXHRcdFx0XHRcdHN0YXJ0aW5nSW5kZXggPSA0O1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN0YXJ0aW5nSW5kZXggPSA1O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUHV0IGFsbCBpdGVtcyBmcm9tIHRoZSBmZWVkIGluIGFuIGFycmF5LlxuXHRcdFx0XHQvLyBUaGlzIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHQkLmVhY2goZGF0YS5pdGVtcywgZnVuY3Rpb24gKGluZGV4LCBpdGVtKSB7XG5cdFx0XHRcdFx0bG9hZEZsaWNrckltYWdlKGl0ZW0sIHN0YXJ0aW5nSW5kZXgpO1xuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHRmdW5jdGlvbiBsb2FkRmxpY2tySW1hZ2UoaXRlbSwgc2l6ZUluZGV4KSB7XG5cdFx0XHRcdFx0dmFyIHBhdGggPSBpdGVtLm1lZGlhLm07XG5cdFx0XHRcdFx0dmFyIGltZ1NyYyA9IHBhdGgucmVwbGFjZShcIl9tXCIsIGZsaWNrckltYWdlU2l6ZXNbc2l6ZUluZGV4XS5sZXR0ZXIpO1xuXHRcdFx0XHRcdHZhciB0ZW1wSW1nID0gJChcIjxpbWcgLz5cIikuYXR0cihcInNyY1wiLCBpbWdTcmMpO1xuXG5cdFx0XHRcdFx0dGVtcEltZy5sb2FkKGZ1bmN0aW9uICgpIHtcblx0XHRcdFx0XHRcdC8vIElzIGl0IHN0aWxsIHNtYWxsZXI/IExvYWQgbmV4dCBzaXplXG5cdFx0XHRcdFx0XHRpZiAodGhpcy5oZWlnaHQgPCBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFIZWlnaHRcIikpIHtcblx0XHRcdFx0XHRcdFx0Ly8gTG9hZCBhIGJpZ2dlciBpbWFnZSwgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKChzaXplSW5kZXggKyAxKSA8IGZsaWNrckltYWdlU2l6ZXMubGVuZ3RoKSB7XG5cdFx0XHRcdFx0XHRcdFx0bG9hZEZsaWNrckltYWdlKGl0ZW0sIHNpemVJbmRleCArIDEpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGFkZEltYWdlVG9Mb2FkZWRJbWFnZXModGhpcyk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRhZGRJbWFnZVRvTG9hZGVkSW1hZ2VzKHRoaXMpO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBGaW5pc2hpbmcgc3R1ZmYgdG8gZG8gd2hlbiBhbGwgaW1hZ2VzIGhhdmUgYmVlbiBsb2FkZWRcblx0XHRcdFx0XHRcdGlmIChsb2FkZWRGbGlja3JJbWFnZXNDb3VudGVyID09PSBudW1iZXJPZkZsaWNrckl0ZW1zKSB7XG5cdFx0XHRcdFx0XHRcdHN3aXRjaCAobWFuaXB1bGF0aW9uTWV0aG9kKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y2FzZSBcImFkZEZpcnN0XCI6XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBBZGQgdGhlIGxvYWRlZCBjb250ZW50IGZpcnN0IGluIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdFx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5jaGlsZHJlbihcIjpmaXJzdFwiKS5iZWZvcmUobG9hZGVkRmxpY2tySW1hZ2VzKTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGNhc2UgXCJhZGRMYXN0XCI6XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBBZGQgdGhlIGxvYWRlZCBjb250ZW50IGxhc3QgaW4gdGhlIHNjcm9sbGFibGUgYXJlYVxuXHRcdFx0XHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmNoaWxkcmVuKFwiOmxhc3RcIikuYWZ0ZXIobG9hZGVkRmxpY2tySW1hZ2VzKTtcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdGRlZmF1bHQ6XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBSZXBsYWNlIHRoZSBjb250ZW50IGluIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdFx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5odG1sKGxvYWRlZEZsaWNrckltYWdlcyk7XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdC8vIFJlY2FsY3VsYXRlIHRoZSB0b3RhbCB3aWR0aCBvZiB0aGUgZWxlbWVudHMgaW5zaWRlIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdFx0XHRcdFx0c2VsZi5yZWNhbGN1bGF0ZVNjcm9sbGFibGVBcmVhKCk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gRGV0ZXJtaW5lIHdoaWNoIGhvdHNwb3RzIHRvIHNob3dcblx0XHRcdFx0XHRcdFx0c2VsZi5fc2hvd0hpZGVIb3RTcG90cygpO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFRyaWdnZXIgY2FsbGJhY2tcblx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImFkZGVkRmxpY2tyQ29udGVudFwiLCBudWxsLCB7IFwiYWRkZWRFbGVtZW50SWRzXCI6IGltYWdlSWRTdHJpbmdCdWZmZXIgfSk7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCB0aGUgbG9hZGVkIGNvbnRlbnQgZmlyc3Qgb3IgbGFzdCBpbiB0aGUgc2Nyb2xsYWJsZSBhcmVhXG5cdFx0XHRcdGZ1bmN0aW9uIGFkZEltYWdlVG9Mb2FkZWRJbWFnZXMoaW1hZ2VPYmopIHtcblx0XHRcdFx0XHQvLyBDYWxjdWxhdGUgdGhlIHNjYWxlZCB3aWR0aFxuXHRcdFx0XHRcdHZhciB3aWR0aFNjYWxpbmdGYWN0b3IgPSBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFIZWlnaHRcIikgLyBpbWFnZU9iai5oZWlnaHQ7XG5cdFx0XHRcdFx0dmFyIHRlbXBXaWR0aCA9IE1hdGgucm91bmQoaW1hZ2VPYmoud2lkdGggKiB3aWR0aFNjYWxpbmdGYWN0b3IpO1xuXHRcdFx0XHRcdC8vIFNldCBhbiBpZCBmb3IgdGhlIGltYWdlIC0gdGhlIGZpbGVuYW1lIGlzIHVzZWQgYXMgYW4gaWRcblx0XHRcdFx0XHR2YXIgdGVtcElkQXJyID0gJChpbWFnZU9iaikuYXR0cihcInNyY1wiKS5zcGxpdChcIi9cIik7XG5cdFx0XHRcdFx0dmFyIGxhc3RFbGVtSW5kZXggPSAodGVtcElkQXJyLmxlbmd0aCAtIDEpO1xuXHRcdFx0XHRcdHRlbXBJZEFyciA9IHRlbXBJZEFycltsYXN0RWxlbUluZGV4XS5zcGxpdChcIi5cIik7XG5cdFx0XHRcdFx0JChpbWFnZU9iaikuYXR0cihcImlkXCIsIHRlbXBJZEFyclswXSk7XG5cdFx0XHRcdFx0Ly8gU2V0IHRoZSBoZWlnaHQgb2YgdGhlIGltYWdlIHRvIHRoZSBoZWlnaHQgb2YgdGhlIHNjcm9sbGFibGUgYXJlYSBhbmQgYWRkIHRoZSB3aWR0aFxuXHRcdFx0XHRcdCQoaW1hZ2VPYmopLmNzcyh7IFwiaGVpZ2h0XCI6IGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYUhlaWdodFwiKSwgXCJ3aWR0aFwiOiB0ZW1wV2lkdGggfSk7XG5cdFx0XHRcdFx0Ly8gQWRkIHRoZSBpZCBvZiB0aGUgaW1hZ2UgdG8gdGhlIGFycmF5IG9mIGlkJ3MgLSB0aGlzXG5cdFx0XHRcdFx0Ly8gaXMgdXNlZCBhcyBhIHBhcmFtZXRlciB3aGVuIHRoZSBjYWxsYmFjayBpcyB0cmlnZ2VyZWRcblx0XHRcdFx0XHRpbWFnZUlkU3RyaW5nQnVmZmVyLnB1c2godGVtcElkQXJyWzBdKTtcblx0XHRcdFx0XHQvLyBBZGQgdGhlIGltYWdlIHRvIHRoZSBhcnJheSBvZiBsb2FkZWQgaW1hZ2VzXG5cdFx0XHRcdFx0bG9hZGVkRmxpY2tySW1hZ2VzLnB1c2goaW1hZ2VPYmopO1xuXG5cdFx0XHRcdFx0Ly8gSW5jcmVtZW50IGNvdW50ZXIgZm9yIGxvYWRlZCBpbWFnZXNcblx0XHRcdFx0XHRsb2FkZWRGbGlja3JJbWFnZXNDb3VudGVyKys7XG5cdFx0XHRcdH1cblxuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHQvKiAgQXJndW1lbnRzIGFyZTpcblx0XHRjb250ZW50IC0gYSB2YWxpZCBVUkwgdG8gYW4gQUpBWCBjb250ZW50IHNvdXJjZSAtIHN0cmluZ1xuXHRcdG1hbmlwdWxhdGlvbk1ldGhvZCAtIGFkZEZpcnN0LCBhZGRMYXN0IG9yIHJlcGxhY2UgKGRlZmF1bHQpIC0gc3RyaW5nXG5cdFx0ZmlsdGVyVGFnIC0gYSBqUXVlcnkgc2VsZWN0b3IgdGhhdCBtYXRjaGVzIHRoZSBlbGVtZW50cyBmcm9tIHRoZSBBSkFYIGNvbnRlbnRcblx0XHRzb3VyY2UgdGhhdCB5b3Ugd2FudCwgZm9yIGV4YW1wbGUgXCIubXlDbGFzc1wiIG9yIFwiI3RoaXNEaXZcIiBvciBcImRpdlwiIC0gc3RyaW5nXG5cdFx0Ki9cblx0XHRnZXRBamF4Q29udGVudDogZnVuY3Rpb24gKGNvbnRlbnQsIG1hbmlwdWxhdGlvbk1ldGhvZCwgZmlsdGVyVGFnKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsIGVsID0gdGhpcy5lbGVtZW50O1xuXHRcdFx0JC5hamF4U2V0dXAoeyBjYWNoZTogZmFsc2UgfSk7XG5cblx0XHRcdCQuZ2V0KGNvbnRlbnQsIGZ1bmN0aW9uIChkYXRhKSB7XG5cdFx0XHRcdHZhciBmaWx0ZXJlZENvbnRlbnQ7XG5cblx0XHRcdFx0aWYgKGZpbHRlclRhZyAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0XHRcdFx0aWYgKGZpbHRlclRhZy5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0XHQvLyBBIGJpdCBvZiBhIGhhY2sgc2luY2UgSSBjYW4ndCBrbm93IGlmIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0XHQvLyB0aGF0IHRoZSB1c2VyIHdhbnRzIGlzIGEgZGlyZWN0IGNoaWxkIG9mIGJvZHkgKD0gdXNlIGZpbHRlcilcblx0XHRcdFx0XHRcdC8vIG9yIG90aGVyIHR5cGVzIG9mIGVsZW1lbnRzICg9IHVzZSBmaW5kKVxuXHRcdFx0XHRcdFx0ZmlsdGVyZWRDb250ZW50ID0gJChcIjxkaXY+XCIpLmh0bWwoZGF0YSkuZmluZChmaWx0ZXJUYWcpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRmaWx0ZXJlZENvbnRlbnQgPSBjb250ZW50O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRmaWx0ZXJlZENvbnRlbnQgPSBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0c3dpdGNoIChtYW5pcHVsYXRpb25NZXRob2QpIHtcblx0XHRcdFx0XHRjYXNlIFwiYWRkRmlyc3RcIjpcblx0XHRcdFx0XHRcdC8vIEFkZCB0aGUgbG9hZGVkIGNvbnRlbnQgZmlyc3QgaW4gdGhlIHNjcm9sbGFibGUgYXJlYVxuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLmJlZm9yZShmaWx0ZXJlZENvbnRlbnQpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0Y2FzZSBcImFkZExhc3RcIjpcblx0XHRcdFx0XHRcdC8vIEFkZCB0aGUgbG9hZGVkIGNvbnRlbnQgbGFzdCBpbiB0aGUgc2Nyb2xsYWJsZSBhcmVhXG5cdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oXCI6bGFzdFwiKS5hZnRlcihmaWx0ZXJlZENvbnRlbnQpO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdC8vIFJlcGxhY2UgdGhlIGNvbnRlbnQgaW4gdGhlIHNjcm9sbGFibGUgYXJlYVxuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmh0bWwoZmlsdGVyZWRDb250ZW50KTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVjYWxjdWxhdGUgdGhlIHRvdGFsIHdpZHRoIG9mIHRoZSBlbGVtZW50cyBpbnNpZGUgdGhlIHNjcm9sbGFibGUgYXJlYVxuXHRcdFx0XHRzZWxmLnJlY2FsY3VsYXRlU2Nyb2xsYWJsZUFyZWEoKTtcblxuXHRcdFx0XHQvLyBEZXRlcm1pbmUgd2hpY2ggaG90c3BvdHMgdG8gc2hvd1xuXHRcdFx0XHRzZWxmLl9zaG93SGlkZUhvdFNwb3RzKCk7XG5cblx0XHRcdFx0Ly8gVHJpZ2dlciBjYWxsYmFja1xuXHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwiYWRkZWRBamF4Q29udGVudFwiKTtcblxuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRnZXRIdG1sQ29udGVudDogZnVuY3Rpb24gKGNvbnRlbnQsIG1hbmlwdWxhdGlvbk1ldGhvZCwgZmlsdGVyVGFnKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsIGVsID0gdGhpcy5lbGVtZW50O1xuXG5cdFx0XHQvLyBObyBBSkFYIGludm9sdmVkIGF0IGFsbCAtIGp1c3QgYWRkIHJhdyBIVE1MLWNvbnRlbnRcblx0XHRcdC8qIEFyZ3VtZW50cyBhcmU6XG5cdFx0XHRjb250ZW50IC0gYW55IHJhdyBIVE1MIHRoYXQgeW91IHdhbnQgLSBzdHJpbmdcblx0XHRcdG1hbmlwdWxhdGlvbk1ldGhvZCAtIGFkZEZpcnN0LCBhZGRMYXN0IG9yIHJlcGxhY2UgKGRlZmF1bHQpIC0gc3RyaW5nXG5cdFx0XHRmaWx0ZXJUYWcgLSBhIGpRdWVyeSBzZWxlY3RvciB0aGF0IG1hdGNoZXMgdGhlIGVsZW1lbnRzIGZyb20gdGhlIEFKQVggY29udGVudFxuXHRcdFx0c291cmNlIHRoYXQgeW91IHdhbnQsIGZvciBleGFtcGxlIFwiLm15Q2xhc3NcIiBvciBcIiN0aGlzRGl2XCIgb3IgXCJkaXZcIiAtIHN0cmluZ1xuXHRcdFx0Ki9cblx0XHRcdHZhciBmaWx0ZXJlZENvbnRlbnQ7XG5cdFx0XHRpZiAoZmlsdGVyVGFnICE9PSB1bmRlZmluZWQpIHtcblx0XHRcdFx0aWYgKGZpbHRlclRhZy5sZW5ndGggPiAwKSB7XG5cdFx0XHRcdFx0Ly8gQSBiaXQgb2YgYSBoYWNrIHNpbmNlIEkgY2FuJ3Qga25vdyBpZiB0aGUgZWxlbWVudFxuXHRcdFx0XHRcdC8vIHRoYXQgdGhlIHVzZXIgd2FudHMgaXMgYSBkaXJlY3QgY2hpbGQgb2YgYm9keSAoPSB1c2UgZmlsdGVyKVxuXHRcdFx0XHRcdC8vIG9yIG90aGVyIHR5cGVzIG9mIGVsZW1lbnRzICg9IHVzZSBmaW5kKVxuXHRcdFx0XHRcdGZpbHRlcmVkQ29udGVudCA9ICQoXCI8ZGl2PlwiKS5odG1sKGNvbnRlbnQpLmZpbmQoZmlsdGVyVGFnKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRmaWx0ZXJlZENvbnRlbnQgPSBjb250ZW50O1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRmaWx0ZXJlZENvbnRlbnQgPSBjb250ZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRzd2l0Y2ggKG1hbmlwdWxhdGlvbk1ldGhvZCkge1xuXHRcdFx0XHRjYXNlIFwiYWRkRmlyc3RcIjpcblx0XHRcdFx0XHQvLyBBZGQgdGhlIGxvYWRlZCBjb250ZW50IGZpcnN0IGluIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oXCI6Zmlyc3RcIikuYmVmb3JlKGZpbHRlcmVkQ29udGVudCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdGNhc2UgXCJhZGRMYXN0XCI6XG5cdFx0XHRcdFx0Ly8gQWRkIHRoZSBsb2FkZWQgY29udGVudCBsYXN0IGluIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oXCI6bGFzdFwiKS5hZnRlcihmaWx0ZXJlZENvbnRlbnQpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdC8vIFJlcGxhY2UgdGhlIGNvbnRlbnQgaW4gdGhlIHNjcm9sbGFibGUgYXJlYVxuXHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5odG1sKGZpbHRlcmVkQ29udGVudCk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlY2FsY3VsYXRlIHRoZSB0b3RhbCB3aWR0aCBvZiB0aGUgZWxlbWVudHMgaW5zaWRlIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdHNlbGYucmVjYWxjdWxhdGVTY3JvbGxhYmxlQXJlYSgpO1xuXHRcblx0XHRcdC8vIERldGVybWluZSB3aGljaCBob3RzcG90cyB0byBzaG93XG5cdFx0XHRzZWxmLl9zaG93SGlkZUhvdFNwb3RzKCk7XG5cblx0XHRcdC8vIFRyaWdnZXIgY2FsbGJhY2tcblx0XHRcdHNlbGYuX3RyaWdnZXIoXCJhZGRlZEh0bWxDb250ZW50XCIpO1xuXG5cdFx0fSxcblx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdFJlY2FsY3VsYXRlIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdHJlY2FsY3VsYXRlU2Nyb2xsYWJsZUFyZWE6IGZ1bmN0aW9uICgpIHtcblxuXHRcdFx0dmFyIHRlbXBTY3JvbGxhYmxlQXJlYVdpZHRoID0gMCwgZm91bmRTdGFydEF0RWxlbWVudCA9IGZhbHNlLCBvID0gdGhpcy5vcHRpb25zLCBlbCA9IHRoaXMuZWxlbWVudDtcblxuXHRcdFx0Ly8gQWRkIHVwIHRoZSB0b3RhbCB3aWR0aCBvZiBhbGwgdGhlIGl0ZW1zIGluc2lkZSB0aGUgc2Nyb2xsYWJsZSBhcmVhXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oby5jb3VudE9ubHlDbGFzcykuZWFjaChmdW5jdGlvbiAoKSB7XG5cdFx0XHRcdC8vIENoZWNrIHRvIHNlZSBpZiB0aGUgY3VycmVudCBlbGVtZW50IGluIHRoZSBsb29wIGlzIHRoZSBvbmUgd2hlcmUgdGhlIHNjcm9sbGluZyBzaG91bGQgc3RhcnRcblx0XHRcdFx0aWYgKChvLnN0YXJ0QXRFbGVtZW50SWQubGVuZ3RoID4gMCkgJiYgKCgkKHRoaXMpLmF0dHIoXCJpZFwiKSkgPT09IG8uc3RhcnRBdEVsZW1lbnRJZCkpIHtcblx0XHRcdFx0XHRlbC5kYXRhKFwic3RhcnRpbmdQb3NpdGlvblwiLCB0ZW1wU2Nyb2xsYWJsZUFyZWFXaWR0aCk7XG5cdFx0XHRcdFx0Zm91bmRTdGFydEF0RWxlbWVudCA9IHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdFx0dGVtcFNjcm9sbGFibGVBcmVhV2lkdGggPSB0ZW1wU2Nyb2xsYWJsZUFyZWFXaWR0aCArICQodGhpcykub3V0ZXJXaWR0aCh0cnVlKTtcblxuXHRcdFx0fSk7XG5cblx0XHRcdC8vIElmIHRoZSBlbGVtZW50IHdpdGggdGhlIElEIHNwZWNpZmllZCBieSBzdGFydEF0RWxlbWVudElkXG5cdFx0XHQvLyBpcyBub3QgZm91bmQsIHJlc2V0IGl0XG5cdFx0XHRpZiAoIShmb3VuZFN0YXJ0QXRFbGVtZW50KSkge1xuXHRcdFx0XHRlbC5kYXRhKFwic3RhcnRBdEVsZW1lbnRJZFwiLCBcIlwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IHRoZSB3aWR0aCBvZiB0aGUgc2Nyb2xsYWJsZSBhcmVhXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFXaWR0aFwiLCB0ZW1wU2Nyb2xsYWJsZUFyZWFXaWR0aCk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikud2lkdGgoZWwuZGF0YShcInNjcm9sbGFibGVBcmVhV2lkdGhcIikpO1xuXG5cdFx0XHQvLyBNb3ZlIHRvIHRoZSBzdGFydGluZyBwb3NpdGlvblxuXHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdChlbC5kYXRhKFwic3RhcnRpbmdQb3NpdGlvblwiKSk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsWFBvc1wiLCBlbC5kYXRhKFwic3RhcnRpbmdQb3NpdGlvblwiKSk7XG5cdFx0fSxcblx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdEdldCBjdXJyZW50IHNjcm9sbGluZyBsZWZ0IG9mZnNldFxuXHRcdCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cdFx0Z2V0U2Nyb2xsZXJPZmZzZXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBlbCA9IHRoaXMuZWxlbWVudDtcblxuXHRcdFx0Ly8gUmV0dXJucyB0aGUgY3VycmVudCBsZWZ0IG9mZnNldFxuXHRcdFx0Ly8gUGxlYXNlIHJlbWVtYmVyIHRoYXQgaWYgdGhlIHNjcm9sbGVyIGlzIGluIGNvbnRpbnVvdXNcblx0XHRcdC8vIG1vZGUsIHRoZSBvZmZzZXQgaXMgbm90IHRoYXQgcmVsZXZhbnQgYW55bW9yZSBzaW5jZVxuXHRcdFx0Ly8gdGhlIHBsdWdpbiB3aWxsIHN3YXAgdGhlIGVsZW1lbnRzIGluc2lkZSB0aGUgc2Nyb2xsZXJcblx0XHRcdC8vIGFyb3VuZCBhbmQgbWFuaXB1bGF0ZSB0aGUgb2Zmc2V0IGluIHRoaXMgcHJvY2Vzcy5cblx0XHRcdHJldHVybiBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCk7XG5cdFx0fSxcblx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdFN0b3BwaW5nLCBzdGFydGluZyBhbmQgZG9pbmcgdGhlIGF1dG8gc2Nyb2xsaW5nXG5cdFx0KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHRzdG9wQXV0b1Njcm9sbGluZzogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLCBlbCA9IHRoaXMuZWxlbWVudDtcblxuXHRcdFx0aWYgKGVsLmRhdGEoXCJhdXRvU2Nyb2xsaW5nSW50ZXJ2YWxcIikgIT09IG51bGwpIHtcblx0XHRcdFx0Y2xlYXJJbnRlcnZhbChlbC5kYXRhKFwiYXV0b1Njcm9sbGluZ0ludGVydmFsXCIpKTtcblx0XHRcdFx0ZWwuZGF0YShcImF1dG9TY3JvbGxpbmdJbnRlcnZhbFwiLCBudWxsKTtcblxuXHRcdFx0XHQvLyBDaGVjayB0byBzZWUgd2hpY2ggaG90c3BvdHMgc2hvdWxkIGJlIGFjdGl2ZVxuXHRcdFx0XHQvLyBpbiB0aGUgcG9zaXRpb24gd2hlcmUgdGhlIHNjcm9sbGVyIGhhcyBzdG9wcGVkXG5cdFx0XHRcdHNlbGYuX3Nob3dIaWRlSG90U3BvdHMoKTtcblxuXHRcdFx0XHRzZWxmLl90cmlnZ2VyKFwiYXV0b1Njcm9sbGluZ1N0b3BwZWRcIik7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHQvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuXHRcdFN0YXJ0IEF1dG9zY3JvbGxpbmdcblx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdHN0YXJ0QXV0b1Njcm9sbGluZzogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLCBlbCA9IHRoaXMuZWxlbWVudCwgbyA9IHRoaXMub3B0aW9ucztcblxuXHRcdFx0aWYgKGVsLmRhdGEoXCJlbmFibGVkXCIpKSB7XG5cdFx0XHRcdHNlbGYuX3Nob3dIaWRlSG90U3BvdHMoKTtcblxuXHRcdFx0XHQvLyBTdG9wIGFueSBydW5uaW5nIGludGVydmFsXG5cdFx0XHRcdGNsZWFySW50ZXJ2YWwoZWwuZGF0YShcImF1dG9TY3JvbGxpbmdJbnRlcnZhbFwiKSk7XG5cdFx0XHRcdGVsLmRhdGEoXCJhdXRvU2Nyb2xsaW5nSW50ZXJ2YWxcIiwgbnVsbCk7XG5cblx0XHRcdFx0Ly8gQ2FsbGJhY2tcblx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImF1dG9TY3JvbGxpbmdTdGFydGVkXCIpO1xuXG5cdFx0XHRcdC8vIFN0YXJ0IGludGVydmFsXG5cdFx0XHRcdGVsLmRhdGEoXCJhdXRvU2Nyb2xsaW5nSW50ZXJ2YWxcIiwgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgdGhlIHNjcm9sbGVyIGlzIG5vdCB2aXNpYmxlIG9yXG5cdFx0XHRcdFx0Ly8gaWYgdGhlIHNjcm9sbGFibGUgYXJlYSBpcyBzaG9ydGVyIHRoYW4gdGhlIHNjcm9sbCB3cmFwcGVyXG5cdFx0XHRcdFx0Ly8gYW55IHJ1bm5pbmcgYXV0byBzY3JvbGwgaW50ZXJ2YWwgc2hvdWxkIHN0b3AuXG5cdFx0XHRcdFx0aWYgKCEoZWwuZGF0YShcInZpc2libGVcIikpIHx8IChlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFXaWR0aFwiKSA8PSAoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuaW5uZXJXaWR0aCgpKSkpIHtcblx0XHRcdFx0XHRcdC8vIFN0b3AgYW55IHJ1bm5pbmcgaW50ZXJ2YWxcblx0XHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoZWwuZGF0YShcImF1dG9TY3JvbGxpbmdJbnRlcnZhbFwiKSk7XG5cdFx0XHRcdFx0XHRlbC5kYXRhKFwiYXV0b1Njcm9sbGluZ0ludGVydmFsXCIsIG51bGwpO1xuXG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBTdG9yZSB0aGUgb2xkIHNjcm9sbExlZnQgdmFsdWUgdG8gc2VlIGlmIHRoZSBzY3JvbGxpbmcgaGFzIHJlYWNoZWQgdGhlIGVuZFxuXHRcdFx0XHRcdFx0ZWwuZGF0YShcInByZXZpb3VzU2Nyb2xsTGVmdFwiLCBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkpO1xuXG5cdFx0XHRcdFx0XHRzd2l0Y2ggKG8uYXV0b1Njcm9sbGluZ0RpcmVjdGlvbikge1xuXHRcdFx0XHRcdFx0XHRjYXNlIFwicmlnaHRcIjpcblxuXHRcdFx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpICsgby5hdXRvU2Nyb2xsaW5nU3RlcCk7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKGVsLmRhdGEoXCJwcmV2aW91c1Njcm9sbExlZnRcIikgPT09IGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSkge1xuXHRcdFx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImF1dG9TY3JvbGxpbmdSaWdodExpbWl0UmVhY2hlZFwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdHNlbGYuc3RvcEF1dG9TY3JvbGxpbmcoKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0XHRcdFx0Y2FzZSBcImxlZnRcIjpcblx0XHRcdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSAtIG8uYXV0b1Njcm9sbGluZ1N0ZXApO1xuXHRcdFx0XHRcdFx0XHRcdGlmIChlbC5kYXRhKFwicHJldmlvdXNTY3JvbGxMZWZ0XCIpID09PSBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHNlbGYuX3RyaWdnZXIoXCJhdXRvU2Nyb2xsaW5nTGVmdExpbWl0UmVhY2hlZFwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdHNlbGYuc3RvcEF1dG9TY3JvbGxpbmcoKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0XHRcdFx0Y2FzZSBcImJhY2tBbmRGb3J0aFwiOlxuXHRcdFx0XHRcdFx0XHRcdGlmIChlbC5kYXRhKFwicGluZ1BvbmdEaXJlY3Rpb25cIikgPT09IFwicmlnaHRcIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdChlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkgKyAoby5hdXRvU2Nyb2xsaW5nU3RlcCkpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpIC0gKG8uYXV0b1Njcm9sbGluZ1N0ZXApKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBJZiB0aGUgc2Nyb2xsTGVmdCBoYXNudCd0IGNoYW5nZWQgaXQgbWVhbnMgdGhhdCB0aGUgc2Nyb2xsaW5nIGhhcyByZWFjaGVkXG5cdFx0XHRcdFx0XHRcdFx0Ly8gdGhlIGVuZCBhbmQgdGhlIGRpcmVjdGlvbiBzaG91bGQgYmUgc3dpdGNoZWRcblx0XHRcdFx0XHRcdFx0XHRpZiAoZWwuZGF0YShcInByZXZpb3VzU2Nyb2xsTGVmdFwiKSA9PT0gZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoZWwuZGF0YShcInBpbmdQb25nRGlyZWN0aW9uXCIpID09PSBcInJpZ2h0XCIpIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0ZWwuZGF0YShcInBpbmdQb25nRGlyZWN0aW9uXCIsIFwibGVmdFwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImF1dG9TY3JvbGxpbmdSaWdodExpbWl0UmVhY2hlZFwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRlbC5kYXRhKFwicGluZ1BvbmdEaXJlY3Rpb25cIiwgXCJyaWdodFwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0c2VsZi5fdHJpZ2dlcihcImF1dG9TY3JvbGxpbmdMZWZ0TGltaXRSZWFjaGVkXCIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRcdFx0XHRjYXNlIFwiZW5kbGVzc0xvb3BSaWdodFwiOlxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRG8gdGhlIGF1dG8gc2Nyb2xsaW5nXG5cdFx0XHRcdFx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdChlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCkgKyBvLmF1dG9TY3JvbGxpbmdTdGVwKTtcblxuXHRcdFx0XHRcdFx0XHRcdHNlbGYuX2NoZWNrQ29udGludW91c1N3YXBSaWdodCgpO1xuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRjYXNlIFwiZW5kbGVzc0xvb3BMZWZ0XCI6XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBEbyB0aGUgYXV0byBzY3JvbGxpbmdcblx0XHRcdFx0XHRcdFx0XHRlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSAtIG8uYXV0b1Njcm9sbGluZ1N0ZXApO1xuXG5cdFx0XHRcdFx0XHRcdFx0c2VsZi5fY2hlY2tDb250aW51b3VzU3dhcExlZnQoKTtcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSwgby5hdXRvU2Nyb2xsaW5nSW50ZXJ2YWwpKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG5cdFx0Q2hlY2sgQ29udGludW9zIFN3YXAgUmlnaHRcblx0XHQqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXHRcdF9jaGVja0NvbnRpbnVvdXNTd2FwUmlnaHQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBlbCA9IHRoaXMuZWxlbWVudCwgbyA9IHRoaXMub3B0aW9ucztcblxuXHRcdFx0Ly8gR2V0IHRoZSB3aWR0aCBvZiB0aGUgZmlyc3QgZWxlbWVudC4gV2hlbiBpdCBoYXMgc2Nyb2xsZWQgb3V0IG9mIHZpZXcsXG5cdFx0XHQvLyB0aGUgZWxlbWVudCBzd2FwcGluZyBzaG91bGQgYmUgZXhlY3V0ZWQuIEEgdHJ1ZS9mYWxzZSB2YXJpYWJsZSBpcyB1c2VkXG5cdFx0XHQvLyBhcyBhIGZsYWcgdmFyaWFibGUgc28gdGhlIHN3YXBBdCB2YWx1ZSBkb2Vzbid0IGhhdmUgdG8gYmUgcmVjYWxjdWxhdGVkXG5cdFx0XHQvLyBpbiBlYWNoIGxvb3AuICBcblx0XHRcdGlmIChlbC5kYXRhKFwiZ2V0TmV4dEVsZW1lbnRXaWR0aFwiKSkge1xuXG5cdFx0XHRcdGlmICgoby5zdGFydEF0RWxlbWVudElkLmxlbmd0aCA+IDApICYmIChlbC5kYXRhKFwic3RhcnRBdEVsZW1lbnRIYXNOb3RQYXNzZWRcIikpKSB7XG5cdFx0XHRcdFx0Ly8gSWYgdGhlIHVzZXIgaGFzIHNldCBhIGNlcnRhaW4gZWxlbWVudCB0byBzdGFydCBhdCwgc2V0IHN3YXBBdCBcblx0XHRcdFx0XHQvLyB0byB0aGF0IGVsZW1lbnQgd2lkdGguIFRoaXMgaGFwcGVucyBvbmNlLlxuXHRcdFx0XHRcdGVsLmRhdGEoXCJzd2FwQXRcIiwgJChcIiNcIiArIG8uc3RhcnRBdEVsZW1lbnRJZCkub3V0ZXJXaWR0aCh0cnVlKSk7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInN0YXJ0QXRFbGVtZW50SGFzTm90UGFzc2VkXCIsIGZhbHNlKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHQvLyBTZXQgc3dhcEF0IHRvIHRoZSBmaXJzdCBlbGVtZW50IGluIHRoZSBzY3JvbGxlclxuXHRcdFx0XHRcdGVsLmRhdGEoXCJzd2FwQXRcIiwgZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLm91dGVyV2lkdGgodHJ1ZSkpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsLmRhdGEoXCJnZXROZXh0RWxlbWVudFdpZHRoXCIsIGZhbHNlKTtcblx0XHRcdH1cblxuXG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgdGhlIHN3YXAgc2hvdWxkIGJlIGRvbmVcblx0XHRcdGlmIChlbC5kYXRhKFwic3dhcEF0XCIpIDw9IGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoKSkge1xuXHRcdFx0XHRlbC5kYXRhKFwic3dhcHBlZEVsZW1lbnRcIiwgZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmNoaWxkcmVuKFwiOmZpcnN0XCIpLmRldGFjaCgpKTtcblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbGFibGVBcmVhXCIpLmFwcGVuZChlbC5kYXRhKFwic3dhcHBlZEVsZW1lbnRcIikpO1xuXHRcdFx0XHR2YXIgd3JhcHBlckxlZnQgPSBlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5zY3JvbGxMZWZ0KCk7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQod3JhcHBlckxlZnQgLSBlbC5kYXRhKFwic3dhcHBlZEVsZW1lbnRcIikub3V0ZXJXaWR0aCh0cnVlKSk7XG5cdFx0XHRcdGVsLmRhdGEoXCJnZXROZXh0RWxlbWVudFdpZHRoXCIsIHRydWUpO1xuXHRcdFx0fVxuXHRcdH0sXG5cdFx0LyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcblx0XHRDaGVjayBDb250aW51b3MgU3dhcCBMZWZ0XG5cdFx0KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblx0XHRfY2hlY2tDb250aW51b3VzU3dhcExlZnQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBlbCA9IHRoaXMuZWxlbWVudCwgbyA9IHRoaXMub3B0aW9ucztcblxuXHRcdFx0Ly8gR2V0IHRoZSB3aWR0aCBvZiB0aGUgZmlyc3QgZWxlbWVudC4gV2hlbiBpdCBoYXMgc2Nyb2xsZWQgb3V0IG9mIHZpZXcsXG5cdFx0XHQvLyB0aGUgZWxlbWVudCBzd2FwcGluZyBzaG91bGQgYmUgZXhlY3V0ZWQuIEEgdHJ1ZS9mYWxzZSB2YXJpYWJsZSBpcyB1c2VkXG5cdFx0XHQvLyBhcyBhIGZsYWcgdmFyaWFibGUgc28gdGhlIHN3YXBBdCB2YWx1ZSBkb2Vzbid0IGhhdmUgdG8gYmUgcmVjYWxjdWxhdGVkXG5cdFx0XHQvLyBpbiBlYWNoIGxvb3AuXG5cblx0XHRcdGlmIChlbC5kYXRhKFwiZ2V0TmV4dEVsZW1lbnRXaWR0aFwiKSkge1xuXHRcdFx0XHRpZiAoKG8uc3RhcnRBdEVsZW1lbnRJZC5sZW5ndGggPiAwKSAmJiAoZWwuZGF0YShcInN0YXJ0QXRFbGVtZW50SGFzTm90UGFzc2VkXCIpKSkge1xuXHRcdFx0XHRcdGVsLmRhdGEoXCJzd2FwQXRcIiwgJChcIiNcIiArIG8uc3RhcnRBdEVsZW1lbnRJZCkub3V0ZXJXaWR0aCh0cnVlKSk7XG5cdFx0XHRcdFx0ZWwuZGF0YShcInN0YXJ0QXRFbGVtZW50SGFzTm90UGFzc2VkXCIsIGZhbHNlKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRlbC5kYXRhKFwic3dhcEF0XCIsIGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5jaGlsZHJlbihcIjpmaXJzdFwiKS5vdXRlcldpZHRoKHRydWUpKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGVsLmRhdGEoXCJnZXROZXh0RWxlbWVudFdpZHRoXCIsIGZhbHNlKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIHRoZSBzd2FwIHNob3VsZCBiZSBkb25lXG5cdFx0XHRpZiAoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpID09PSAwKSB7XG4gICAgICAgXG5cdFx0XHRcdGVsLmRhdGEoXCJzd2FwcGVkRWxlbWVudFwiLCBlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikuY2hpbGRyZW4oXCI6bGFzdFwiKS5kZXRhY2goKSk7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5wcmVwZW5kKGVsLmRhdGEoXCJzd2FwcGVkRWxlbWVudFwiKSk7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLnNjcm9sbExlZnQoZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikuc2Nyb2xsTGVmdCgpICsgZWwuZGF0YShcInN3YXBwZWRFbGVtZW50XCIpLm91dGVyV2lkdGgodHJ1ZSkpO1xuXHRcdFx0XHRlbC5kYXRhKFwiZ2V0TmV4dEVsZW1lbnRXaWR0aFwiLCB0cnVlKTtcbiAgICAgICAgXG5cdFx0XHR9XG5cblx0XHR9LFxuXHRcdHJlc3RvcmVPcmlnaW5hbEVsZW1lbnRzOiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsIGVsID0gdGhpcy5lbGVtZW50O1xuXG5cdFx0XHQvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBjb250ZW50IG9mIHRoZSBzY3JvbGxhYmxlIGFyZWFcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxhYmxlQXJlYVwiKS5odG1sKGVsLmRhdGEoXCJvcmlnaW5hbEVsZW1lbnRzXCIpKTtcblx0XHRcdHNlbGYucmVjYWxjdWxhdGVTY3JvbGxhYmxlQXJlYSgpO1xuXHRcdFx0c2VsZi5qdW1wVG9FbGVtZW50KFwiZmlyc3RcIik7XG5cdFx0fSxcblx0XHRzaG93OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgZWwgPSB0aGlzLmVsZW1lbnQ7XG5cdFx0XHRlbC5kYXRhKFwidmlzaWJsZVwiLCB0cnVlKTtcblx0XHRcdGVsLnNob3coKTtcblx0XHR9LFxuXHRcdGhpZGU6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBlbCA9IHRoaXMuZWxlbWVudDtcblx0XHRcdGVsLmRhdGEoXCJ2aXNpYmxlXCIsIGZhbHNlKTtcblx0XHRcdGVsLmhpZGUoKTtcblx0XHR9LFxuXHRcdGVuYWJsZTogZnVuY3Rpb24gKCkge1xuXHRcdFx0dmFyIGVsID0gdGhpcy5lbGVtZW50O1xuXG5cdFx0XHQvLyBFbmFibGUgdG91Y2ggc2Nyb2xsaW5nXG5cdFx0XHRpZiAodGhpcy5vcHRpb25zLnRvdWNoU2Nyb2xsaW5nKSB7XG5cdFx0XHRcdGVsLmRhdGEoXCJzY3JvbGxXcmFwcGVyXCIpLmtpbmV0aWMoJ2F0dGFjaCcpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgZW5hYmxlZCB0byB0cnVlXG5cdFx0XHRlbC5kYXRhKFwiZW5hYmxlZFwiLCB0cnVlKTtcblx0XHR9LFxuXHRcdGRpc2FibGU6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBzZWxmID0gdGhpcywgZWwgPSB0aGlzLmVsZW1lbnQ7XG5cblx0XHRcdC8vIENsZWFyIGFsbCBydW5uaW5nIGludGVydmFsc1xuXHRcdFx0c2VsZi5zdG9wQXV0b1Njcm9sbGluZygpO1xuXHRcdFx0Y2xlYXJJbnRlcnZhbChlbC5kYXRhKFwicmlnaHRTY3JvbGxpbmdJbnRlcnZhbFwiKSk7XG5cdFx0XHRjbGVhckludGVydmFsKGVsLmRhdGEoXCJsZWZ0U2Nyb2xsaW5nSW50ZXJ2YWxcIikpO1xuXHRcdFx0Y2xlYXJJbnRlcnZhbChlbC5kYXRhKFwiaGlkZUhvdFNwb3RCYWNrZ3JvdW5kc0ludGVydmFsXCIpKTtcblxuXHRcdFx0Ly8gRGlzYWJsZSB0b3VjaCBzY3JvbGxpbmdcblx0XHRcdGlmICh0aGlzLm9wdGlvbnMudG91Y2hTY3JvbGxpbmcpIHtcblx0XHRcdFx0ZWwuZGF0YShcInNjcm9sbFdyYXBwZXJcIikua2luZXRpYygnZGV0YWNoJyk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBlbmFibGVkIHRvIGZhbHNlXG5cdFx0XHRlbC5kYXRhKFwiZW5hYmxlZFwiLCBmYWxzZSk7XG5cdFx0fSxcblx0XHRkZXN0cm95OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXMsIGVsID0gdGhpcy5lbGVtZW50O1xuXG5cdFx0XHQvLyBDbGVhciBhbGwgcnVubmluZyBpbnRlcnZhbHNcblx0XHRcdHNlbGYuc3RvcEF1dG9TY3JvbGxpbmcoKTtcblx0XHRcdGNsZWFySW50ZXJ2YWwoZWwuZGF0YShcInJpZ2h0U2Nyb2xsaW5nSW50ZXJ2YWxcIikpO1xuXHRcdFx0Y2xlYXJJbnRlcnZhbChlbC5kYXRhKFwibGVmdFNjcm9sbGluZ0ludGVydmFsXCIpKTtcblx0XHRcdGNsZWFySW50ZXJ2YWwoZWwuZGF0YShcImhpZGVIb3RTcG90QmFja2dyb3VuZHNJbnRlcnZhbFwiKSk7XG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgZWxlbWVudCBzcGVjaWZpYyBldmVudHNcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikudW5iaW5kKFwibW91c2VvdmVyXCIpO1xuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RSaWdodFwiKS51bmJpbmQoXCJtb3VzZW91dFwiKTtcblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikudW5iaW5kKFwibW91c2Vkb3duXCIpO1xuXG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikudW5iaW5kKFwibW91c2VvdmVyXCIpO1xuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLnVuYmluZChcIm1vdXNlb3V0XCIpO1xuXHRcdFx0ZWwuZGF0YShcInNjcm9sbGluZ0hvdFNwb3RMZWZ0XCIpLnVuYmluZChcIm1vdXNlZG93blwiKTtcblxuXHRcdFx0ZWwudW5iaW5kKFwibW91c2VudGVyXCIpO1xuXHRcdFx0ZWwudW5iaW5kKFwibW91c2VsZWF2ZVwiKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBlbGVtZW50cyBjcmVhdGVkIGJ5IHRoZSBwbHVnaW5cblx0XHRcdGVsLmRhdGEoXCJzY3JvbGxpbmdIb3RTcG90UmlnaHRcIikucmVtb3ZlKCk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsaW5nSG90U3BvdExlZnRcIikucmVtb3ZlKCk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsYWJsZUFyZWFcIikucmVtb3ZlKCk7XG5cdFx0XHRlbC5kYXRhKFwic2Nyb2xsV3JhcHBlclwiKS5yZW1vdmUoKTtcblxuXHRcdFx0Ly8gUmVzdG9yZSB0aGUgb3JpZ2luYWwgY29udGVudCBvZiB0aGUgc2Nyb2xsYWJsZSBhcmVhXG5cdFx0XHRlbC5odG1sKGVsLmRhdGEoXCJvcmlnaW5hbEVsZW1lbnRzXCIpKTtcblxuXHRcdFx0Ly8gQ2FsbCB0aGUgYmFzZSBkZXN0cm95IGZ1bmN0aW9uXG5cdFx0XHQkLldpZGdldC5wcm90b3R5cGUuZGVzdHJveS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG5cdFx0fVxuXG5cblx0fSk7XG59KShqUXVlcnkpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
